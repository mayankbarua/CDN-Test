var nbMiniTask=angular.module("nb.miniTask",["nb.networkos","nb.common","nb.path","nb.systemmodel","nb.datamodel","nb.ng","nb.parserlib","ivh.treeview","nb.qapp","nb.netbrain","ui.grid","ui.grid.treeView","ui.grid.draggable-rows","ui.grid.cellNav","ngAnimate","dialogService","ui.bootstrap","nb.snapshot","nb.activity","nb.dataviewtemplate"]).run(["osFs","nb.miniTask.miniTaskHubRecoverRegister",function(osFsProvider,miniTaskHubRecoverRegister){}]);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.httpMiniTaskSrvc",HttpMiniTaskSrvc);HttpMiniTaskSrvc.$inject=["nb.ng.nbHttp","$q","nb.ng.utilitySrvc"];function HttpMiniTaskSrvc(nbHttp,$q,utilitySrvc){var loadDeviceDetails={};function innerAjax(req){return nbHttp[req.method.toLowerCase()](req.url,req.data)}innerAjax.byMethod=function(method,request){var defaultRequest={method:method};return innerAjax(angular.extend(defaultRequest,request))};innerAjax.get=function(request){return innerAjax.byMethod("GET",request)};innerAjax.post=function(request){return innerAjax.byMethod("POST",request)};innerAjax.delete=function(request){return innerAjax.byMethod("DELETE",request)};innerAjax.put=function(request){return innerAjax.byMethod("PUT",request)};innerAjax.patch=function(request){return innerAjax.byMethod("PATCH",request)};var api={activity:{setMultiDataViewGroupShareWithMap:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/setMultiDataViewGroupShareWithMap",data:newOrder})},existDataViewGroupShareWithMap:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/existDataViewGroupShareWithMap",data:newOrder})},existMultiGlobalDataViewGroupWithName:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/existMultiGlobalDataViewGroupWithName",data:newOrder})},CheckInMultiGlobalDataView:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/CheckInMultiGlobalDataView",data:newOrder})},getMiniTaskInfo:function(activityManager,newOrder){return innerAjax.get({url:"runbook/actionTask/get/"+newOrder.type+"/"+newOrder.id})},getDeviceInfo:function(data){return innerAjax.post({url:"runbook/actionTask/translate",data:data})},getDataView:function(activityManager,newOrder){return innerAjax.get({url:"dataview/displaydataview/"+newOrder.id})},getUpdateDataViewInfo:function(callbackInfo){return nbHttp.post("dataview/getUpdateDataViewInfo",callbackInfo,{avoidBlockUI:!0})},getShareDataView:function(newOrder){return innerAjax.get({url:"dataview/sharedataview/"+newOrder.id})},hasDataViewGroupShareWithMap:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/hasDataViewGroupShareWithMap",data:newOrder})},setDataViewGroupShareWithMap:function(newOrder){return innerAjax.post({url:"dataview/dataviewgroup/setDataViewGroupShareWithMap",data:newOrder})},getDescription:function(miniTaskType,miniTaskId){return innerAjax.get({url:"runbook/actionTask/description/"+miniTaskType+"/"+miniTaskId})},GetDeviceList:function(strALogId,strDataFolderId,isFromRetrieve){return isFromRetrieve?innerAjax.get({url:"benchmark/devicelist/"+strDataFolderId}):innerAjax.get({url:"livelog/devicelist?alogId="+strALogId})},GetRunningsByPageId:function(pageId){return innerAjax.get({url:"actionTask/actionLog/getRunningsByPageId/"+pageId})}},framework:{run:function(frameworkManager,objJsonData){objJsonData.ownerWebPageId=netBrain.Page.Guid;objJsonData.hubClientId=ngHub.getInstance().getClientId();objJsonData.triggerLocalStartTime=new Date;return innerAjax.post({url:"runbook/actionTask/run",data:objJsonData})},stop:function(objJsonData){return innerAjax.post({url:"runbook/actionTask/stop/"+objJsonData.activityId})}},aLog:{getLiveLogDevices:function(aLogId){return innerAjax.get({url:"actionTask/otherwrapper/livelog/devicelist?alogId="+aLogId})},getCommandDetail:function(aLogId,deviceId){return innerAjax.get({url:"actionTask/otherwrapper/commanddetail/"+aLogId+"/"+deviceId})},getDeviceData:function(aLogId,deviceId){return innerAjax.get({url:"actionTask/otherwrapper/deviceData/"+aLogId+"/"+deviceId})},getLiveLogs:function(aLogId,deviceId){return innerAjax.get({url:"actionTask/otherwrapper/livelogs/"+aLogId+"/"+deviceId})},getCsvActivityDataTables:function(aLogId){return innerAjax.get({url:"actionTask/otherwrapper/csvactivitydatatable/"+aLogId+"/1"})},getCsvData:function(data){return nbHttp.post("actionTask/otherwrapper/getCsvData/",data)},hasCsvActivityDataTables:function(aLogId){return innerAjax.get({url:"actionTask/otherwrapper/hasActivityDataTable/"+aLogId})},refreshHasDataViewForRemove:function(dataviewGroupId){return innerAjax.post({url:"actionTask/actionLog/refreshHasDataViewForRemove",data:dataviewGroupId})},getCommandResultById:function(id){return innerAjax.get({url:utilitySrvc.formatString("actionTask/otherwrapper/commandResult/{id}",{id:id})})},getCommandPartResultById:function(id){return innerAjax.get({url:utilitySrvc.formatString("actionTask/otherwrapper/commandPartResult/{id}",{id:id})})},getLiveLogById:function(aLogId,id){return innerAjax.get({url:utilitySrvc.formatString("actionTask/otherwrapper/liveLog/{alogId}/{id}",{alogId:aLogId,id:id})})},getPartCommandResultByCommand:function(data){return innerAjax.post({url:"actionTask/otherwrapper/partCommandResult",data:data})},getLiveLogByCommand:function(data){return innerAjax.post({url:"actionTask/otherwrapper/liveLoginfo",data:data})}},getDataViewGroup:function(alogId,qappId){var url=utilitySrvc.formatString("dataview/dataviewgroup/GetDataViewGroup/{alogId}/{qappId}",{alogId:alogId,qappId:qappId||""});return nbHttp.get(url,null,{avoidBlockUI:!0})},getActivitiesByIds:function(activityIds){return nbHttp.post("activity/getByIds",{ids:activityIds})}};return{framework:api.framework,activity:api.activity,loadDeviceDetail:function(flagId){var defer=$q.defer();setTimeout((function(){flagId in loadDeviceDetails.data&&defer.resolve(loadDeviceDetails.data[flagId])}),1e3);return defer.promise},aLog:api.aLog,getDataViewGroup:api.getDataViewGroup,getActivitiesByIds:api.getActivitiesByIds}}}(NetBrain);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.pathHelper",PathHelper);PathHelper.$inject=[];angular.module("nb.miniTask").factory("nb.miniTask.delaySettor",DelaySettor);DelaySettor.$inject=[];angular.module("nb.miniTask").factory("nb.miniTask.miniTaskFrameworkUtilsSrvc",MiniTaskFrameworkUtilsSrvc);MiniTaskFrameworkUtilsSrvc.$inject=["$q","$log","$window","nb.miniTask.miniTaskDialog"];angular.module("nb.miniTask").constant("nb.miniTask.templates",{noteTemplateUrl:"templates/notePopover.html",noteEditTemplateUrl:"templates/noteEditPopover.html",devicesTemplateUrl:"templates/devicesPopover.html"});function PathHelper(){return{getFullPath:function(fileName){return"modules/nbMiniTask/framework/views/"+fileName}}}function DelaySettor(){var timeQue,timeQ;return function(entity,key,value){clearTimeout(timeQue);clearTimeout(timeQue,timeQ);timeQ=null;timeQue=null;timeQue=setTimeout((function(){entity[key]=value}),100)}}function MiniTaskFrameworkUtilsSrvc($q,$log,$window,miniTaskDialog){var objWatch=Object.create(null);return{logError:logError,returnResolvePromise:function(dataValue){return returnPromise((function(defer){return defer.resolve(dataValue)}))},returnRejectPromise:function(reason){return returnPromise((function(defer){return defer.reject(reason)}))},returnPromise:returnPromise,reloadWhenSuccess:function(promise,load,preventAutoReload){if(preventAutoReload)return promise;return promise.then((function(rsp){return load().then((function(){return rsp}),(function(reason){logError(reason);return rsp}))}))},getTemplate:function(selector){return $(selector).get(0).innerHTML.trim()},parseDate:function(strValue){return strValue?angular.isDate(strValue)?strValue:new Date(strValue):strValue},watch:function(objData,callBack){objWatch[objData.ID]=objWatch[objData.ID]||[];objWatch[objData.ID].push(callBack)},unWatch:function(objData){objWatch[objData.ID]&&(objWatch[objData.ID]=void 0)}};function logError(err){if(null!=err){var msg="object"===_typeof(err)?err.ResultDesc:err;miniTaskDialog.alert(msg)}else miniTaskDialog.alert("error message is null")}function returnPromise(action){var defer=$q.defer();action(defer);return defer.promise}}}(NetBrain);function _typeof(obj){return(_typeof="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(obj){return typeof obj}:function(obj){return obj&&"function"==typeof Symbol&&obj.constructor===Symbol&&obj!==Symbol.prototype?"symbol":typeof obj})(obj)}!function(netBrain){function megerTitle(opts){if("object"==_typeof(opts)){var title=opts.title,content=opts.content;content&&(title+="<br>"+content);return title}return opts}angular.module("nb.miniTask").factory("nb.miniTask.miniTaskDialog",MinTaskDialog);MinTaskDialog.$inject=["$q","nb.common.nbAlertSrvc"];function MinTaskDialog($q,nbAlertSrvc){var exports={};exports.confirm=function(title){return nbAlertSrvc.confirm({message:megerTitle(title)})};exports.notify=function(title){return nbAlertSrvc.notification({message:megerTitle(title)})};exports.warn=function(title){return nbAlertSrvc.warnning({message:megerTitle(title)})};exports.error=function(title){return nbAlertSrvc.error({message:megerTitle(title)})};exports.alert=function(title){return nbAlertSrvc.alert({message:megerTitle(title)})};return exports}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.targetDeviceSrvc",miniTaskSrvc);miniTaskSrvc.$inject=["$http","$q","$log","$location"];var filterDevTypes=[1024,1037,3002];function miniTaskSrvc($http,$q,$log,$location){function _getTargetDevice(args,type,bIncludeNonRealDevice){var op=args.objPage.getNetmapOperator();var targetDevice;switch(type){case"1":targetDevice=op.getAllDevcies(!0,bIncludeNonRealDevice);break;case"2":targetDevice=op.getAllSites();break;case"3":targetDevice=op.getAllDeviceGroups();break;case"4":targetDevice=op.getAllPaths()}var arrDevice=[];for(var i=0;i<targetDevice.length;++i){var objDevice=targetDevice[i];"1"==type?objDevice.devNodeData&&objDevice.devNodeData.hasOwnProperty("isRealDev")&&1!=objDevice.devNodeData.isRealDev&&!bIncludeNonRealDevice||-1===filterDevTypes.indexOf(objDevice.devType)&&arrDevice.push({id:objDevice.key,name:objDevice.getHostname(),type:objDevice.devType,nodeIdentify:objDevice.devNodeData?objDevice.devNodeData.nodeIdentify:null}):"4"==type?arrDevice.push({id:objDevice.pathId,name:objDevice.fromDev.devName+" => "+objDevice.toDev.devName+(objDevice.isLive?"":"(cache)")}):arrDevice.push({id:objDevice.key,name:objDevice.getHostname(),type:objDevice.devType})}return arrDevice}this.getDevices=function(args,bIncludeNonRealDevice){return _getTargetDevice(args,"1",bIncludeNonRealDevice)};this.getSites=function(args){return _getTargetDevice(args,"2")};this.getDeviceGroups=function(args){return _getTargetDevice(args,"3")};this.getPaths=function(args){return _getTargetDevice(args,"4")};this.getTargetDeviceOnMap=function(args,bIncludeNonRealDevice){return{devices:this.getDevices(args,bIncludeNonRealDevice),sites:this.getSites(args),deviceGroups:this.getDeviceGroups(args),paths:this.getPaths(args)}};this.getDefaultSelectedDevices=function(mapPageObj,bIncludeNonRealDevice){var selectedDevices=this.getSelectedDeviceOnMap(mapPageObj,bIncludeNonRealDevice);if(selectedDevices.virtualNodes){selectedDevices.devices||(selectedDevices.devices=[]);selectedDevices.devices=selectedDevices.devices.concat(selectedDevices.virtualNodes)}var deviceConfig={objPage:mapPageObj};return selectedDevices.hasSelectedDevice?selectedDevices:this.getTargetDeviceOnMap(deviceConfig,bIncludeNonRealDevice)};this.getSelectedDeviceOnMap=function(mapPageObj,bIncludeNonRealDevice){var deviceStruct={};var deviceCategories=[{name:"devices",category:netBrain.Map.CategoryMgr.NetworkDevice,getter:"_getSelectNodesByCategory"},{name:"sites",category:netBrain.Map.CategoryMgr.Site,getter:"_getSelectNodesByCategory"},{name:"paths",category:netBrain.Map.CategoryMgr.PathNew,getter:"_getSelectNodesByCategory"},{name:"deviceGroups",category:netBrain.Map.CategoryMgr.Cluter,getter:"_getSelectNodesByCategory"},{name:"virtualNodes",category:netBrain.Map.CategoryMgr.VirtualNode,getter:"_getSelectNodesByCategory"}];_.each(deviceCategories,(function(category){var devices=function(category,mapPageObj){var arrTarget=mapPageObj[category.getter](category.category);return _.map(arrTarget,(function(node){return node.key&&"PathNew"!==category.category?{id:node.key,name:node.getHostname(),devType:node.devType,nodeIdentify:node.devNodeData?node.devNodeData.nodeIdentify:null}:{id:node.pathId,name:node.fromDev.devName+" => "+node.toDev.devName+(node.isLive?"":"(cache)")}}))}(category,mapPageObj);if((devices=_.filter(devices,(function(dev){return-1===filterDevTypes.indexOf(dev.devType)})))&&devices.length){deviceStruct.hasSelectedDevice=!0;deviceStruct[category.name]=devices}}));if(bIncludeNonRealDevice&&deviceStruct.virtualNodes){deviceStruct.devices||(deviceStruct.devices=[]);deviceStruct.devices=deviceStruct.devices.concat(deviceStruct.virtualNodes)}return deviceStruct};this.mergeTargetDevices=function(curTargetDevice,targetDevicesOnMap){var bChanged=!1;_.each(["devices","sites","deviceGroups","paths"],(function(type){var targetIds=curTargetDevice[type];for(var i=0;i<targetIds.length;i++){var targetId=targetIds[i];if(!_.find(targetDevicesOnMap[type],{id:targetId})){curTargetDevice[type].splice(i,1);bChanged=!0;i--}}}));return bChanged}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.dataViewManagerCallerSrvc",nbService);nbService.$inject=["$uibModal","$rootScope"];function nbService($uibModal,$rootScope){this.showModal=function(arg){return $uibModal.open({templateUrl:"modules/nbMiniTask/framework/views/miniTaskViewDetailCtrl.html",controller:"nb.miniTask.miniTaskViewDetailCtrl",backdrop:"static",keyboard:!1,windowClass:"m-mapFolderDialog",size:"lg",resolve:{args:function(){return arg}}}).result}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.miniTaskForDataViewSrvc",MiniTaskForDataViewSrvc);MiniTaskForDataViewSrvc.$inject=["$q","nb.miniTask.httpMiniTaskSrvc"];function MiniTaskForDataViewSrvc($q,httpMiniTaskSrvc){var miniTaskInfoCache={},services={},qappCache={};var lastDataViewGroupIdCache={};services.getLastDataViewGroup=function(mapPageId){var deferred=$q.defer();var lastDataViewGroupId=lastDataViewGroupIdCache[mapPageId];lastDataViewGroupId?deferred.resolve({id:lastDataViewGroupId}):deferred.resolve("");return deferred.promise};services.setLastMiniTaskInfo=function(mapPageId,miniTaskInfo){miniTaskInfoCache[mapPageId]=miniTaskInfo};services.setLastDataViewGroupId=function(mapPageId,dataViewGroupId){lastDataViewGroupIdCache[mapPageId]=dataViewGroupId;console.warn("setLastDataViewGroupId:"+dataViewGroupId)};services.setQappInfo=function(alogId,qappData){qappCache[alogId]=qappData};services.getQappInfo=function(alogId){return qappCache[alogId]};return services}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.miniTaskHubRecoverRegister",miniTaskHubRecoverRegister);miniTaskHubRecoverRegister.$inject=[];function miniTaskHubRecoverRegister(){var _recoverDic={};this.register=function(eventName,recover){_recoverDic[eventName]=recover};this.getRecover=function(eventName){return _recoverDic[eventName]}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.miniTaskHubSrvc",miniTaskHubSrvc);miniTaskHubSrvc.$inject=["$http","$q","$log","$location","$rootScope","$filter","nb.miniTask.miniTaskHubRecoverRegister"];function miniTaskHubSrvc($http,$q,$log,$location,$rootScope,$filter,miniTaskHubRecoverRegister){this.register=function(eventName){if(arguments.length<2)throw"Include at least a two parameter";if("string"!=typeof eventName)throw"he first parameter should be for the event name string";if("string"!=typeof arguments[1]&&"function"!=typeof arguments[1])throw"The second parameter should be for the businessId string or callback function";if("string"==typeof arguments[1]&&"function"!=typeof arguments[2])throw"The third argument must be a callback function";var token={eventName:eventName,businessId:"",tokenId:"",destroy:function(){_tokenDestroy(this)},postToRecover:function(msg){_hubRecoverPostMsg(this,msg)}};var callback=null;if("function"==typeof arguments[1]){callback=arguments[1];token.tokenId=ngHub.getInstance().registerEvent(eventName,_hubRecoverCallbackDecorator(token,callback))}else{callback=arguments[2];token.businessId=arguments[1];token.tokenId=ngHub.getInstance().registerEvent(eventName,_hubRecoverCallbackDecorator(token,callback));ngHub.getInstance().subBusinessId(eventName,token.businessId)}token._callback=callback;_tokenRegister(token);return token};var _eventDic={};function _tokenRegister(token){var busDic=_eventDic[token.eventName];if(!busDic){busDic={};_eventDic[token.eventName]=busDic;!function(eventName,busDic){var recover=miniTaskHubRecoverRegister.getRecover(eventName);if(!recover)return;recover.$raiseEvent=function(businessId,eventData){var tokonListDic=busDic[businessId];_.each(tokonListDic,(function(token){token._callback(eventData)}))}}(token.eventName,busDic)}var tokonListDic=busDic[token.businessId];if(!tokonListDic){tokonListDic={};busDic[token.businessId]=tokonListDic}tokonListDic[token.tokenId]=token;!function(token){var recover=miniTaskHubRecoverRegister.getRecover(token.eventName);if(!recover||!recover.observerJoined)return;recover.observerJoined(token)}(token)}function _tokenDestroy(token){var busDic=_eventDic[token.eventName];if(busDic){var tokonListDic=busDic[token.businessId];if(tokonListDic){delete tokonListDic[token.tokenId];ngHub.getInstance().unRegisterEvent(token.eventName,token.tokenId);!function(token){var recover=miniTaskHubRecoverRegister.getRecover(token.eventName);if(!recover||!recover.observerExited)return;recover.observerExited(token)}(token);if(0===_.keys(tokonListDic).length){token.businessId&&ngHub.getInstance().unsubBusinessId(token.eventName,token.businessId);!function(eventName,businessId){var recover=miniTaskHubRecoverRegister.getRecover(eventName);if(!recover||!recover.observerBusinessExited)return;recover.observerBusinessExited(businessId)}(token.eventName,token.businessId);delete busDic[token.businessId]}0==_.keys(busDic).length&&function(eventName){var recover=miniTaskHubRecoverRegister.getRecover(eventName);if(!recover||!recover.observerAllExited)return;recover.observerAllExited()}(token.eventName)}}}function _hubRecoverPostMsg(token,msg){var recover=miniTaskHubRecoverRegister.getRecover(token.eventName);recover&&recover.postMsg&&recover.postMsg(token,msg)}function _hubRecoverCallbackDecorator(token,callback){var recover=miniTaskHubRecoverRegister.getRecover(token.eventName);return recover&&recover.eventDataReview?function(data){if(!data.$$hubRecoverInvoked){var newData=recover.eventDataReview(token,data);newData&&(data.$$callbackData=newData);data.$$hubRecoverInvoked=!0}if(data.$$callbackData){var callbackData=data.$$callbackData;delete data.$$callbackData;callback(callbackData);data.$$callbackData=callbackData}}:callback}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").controller("nb.miniTask.executionTargetDeviceSelectPopupCtrl",ExecutionTargetDeviceSelectPopupCtrl);ExecutionTargetDeviceSelectPopupCtrl.$inject=["$scope","$uibModalInstance","ivhTreeviewBfs","nb.ng.httpAuthSrvc","nb.miniTask.targetDeviceSrvc","args"];function ExecutionTargetDeviceSelectPopupCtrl($scope,$uibModalInstance,ivhTreeviewBfs,httpAuthSrvc,targetDeviceSrvc,args){var _bIncludeNonRealDevice=!0===args.bIncludeNonRealDevice;var _filterText=null;var selectData=function(arrTarget,arrSelected){for(var i=0;i<arrSelected.length;++i){var objSelected=arrSelected[i];for(var j=0;j<arrTarget.length;++j){var objTarget=arrTarget[j];if(objSelected.id==objTarget.id){objTarget.selected=!0;break}}}};function _defineNodeHighlightNameProperty(node){Object.defineProperty(node,"highlightName",{get:function(){var _filter=_filterText?_filterText.replace(/([\*\.\?\+\$\^\[\]\(\)\{\}\|\\])/g,(function(c){return"\\"+c})):null;return _filter?node.name.replace(new RegExp("("+_filter+")","gi"),'<span style="background-color: yellow;">$1</span>'):node.name}})}function _defineNodeHideProperty(node){var _hide=!1;Object.defineProperty(node,"hide",{get:function(){node._match?_hide=!1:void 0!==node.items?node.items.forEach((function(item){item.hide||(_hide=!1)})):_hide=!0;return _hide}})}$scope.onOk=function(){var selectedItems={};ivhTreeviewBfs($scope.objTargetDeviceTreeData,(function(node,arrParent){if(node.selected&&node._match&&arrParent.length>0){var objParent=arrParent[0];selectedItems[objParent.value]=selectedItems[objParent.value]||[];selectedItems[objParent.value].push({id:node.id,name:node.name,devType:node.type,domainId:node.domainID,nodeIdentify:node.nodeIdentify})}return!0}));$uibModalInstance.close(selectedItems)};$scope.onCancle=function(){$uibModalInstance.dismiss("Cancel")};$scope.doSearch=function(e,str){if(13===e.keyCode){$scope.keyword=str;$scope.onFilterChanged()}};$scope.clearSearch=function(){$scope.keyword="";$scope.onFilterChanged()};$scope.onFilterChanged=function(){_filterText=$scope.keyword;$scope.objTargetDeviceTreeData.forEach((function(childern){childern.expended=!0;!function filterNode(node,keyword){if(keyword){node._match=node.name.toUpperCase().indexOf(keyword.toUpperCase())>-1;node.expended=!0}else node._match=!0;void 0!==node.items&&node.items.forEach((function(item){filterNode(item,keyword)}),this)}(childern,_filterText)}))};!function(){$scope.objTargetDeviceTreeData=[];if(args.filterFunc&&"getDevices"===args.filterFunc){if((arrTarget=targetDeviceSrvc.getDevices(args,_bIncludeNonRealDevice)).length>0){selectData(arrTarget,args.objTarget.devices||[]);$scope.objTargetDeviceTreeData.push({id:1,name:"Devices",value:"devices",items:arrTarget})}$scope.objTargetDeviceTreeData.forEach((function(childern){_defineNodeHighlightNameProperty(childern);childern._match=!0;_defineNodeHideProperty(childern);void 0!==childern.items&&childern.items.forEach((function(item){item._match=!0;_defineNodeHighlightNameProperty(item);_defineNodeHideProperty(item)}))}))}else{var arrTarget;if((arrTarget=targetDeviceSrvc.getDevices(args,_bIncludeNonRealDevice)).length>0){selectData(arrTarget,args.objTarget.devices||[]);$scope.objTargetDeviceTreeData.push({id:1,name:"Devices",value:"devices",items:arrTarget})}if((arrTarget=targetDeviceSrvc.getSites(args)).length>0){selectData(arrTarget,args.objTarget.sites||[]);$scope.objTargetDeviceTreeData.push({id:2,name:"Sites",value:"sites",items:arrTarget})}if((arrTarget=targetDeviceSrvc.getDeviceGroups(args)).length>0){selectData(arrTarget,args.objTarget.deviceGroups||[]);$scope.objTargetDeviceTreeData.push({id:3,name:"Device Groups",value:"deviceGroups",items:arrTarget})}if((arrTarget=targetDeviceSrvc.getPaths(args)).length>0){selectData(arrTarget,args.objTarget.paths||[]);$scope.objTargetDeviceTreeData.push({id:4,name:"Paths",value:"paths",items:arrTarget})}$scope.objTargetDeviceTreeData.forEach((function(childern){_defineNodeHighlightNameProperty(childern);childern._match=!0;_defineNodeHideProperty(childern);void 0!==childern.items&&childern.items.forEach((function(item){item._match=!0;_defineNodeHighlightNameProperty(item);_defineNodeHideProperty(item)}))}))}}()}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").controller("nb.miniTask.miniTaskViewDetailCtrl",nbController);nbController.$inject=["$scope","$log","$uibModal","$uibModalInstance","nb.miniTask.httpMiniTaskSrvc","nb.systemmodel.deviceTypeMgrSrvc","nb.systemmodel.deviceTypeMainMgrSrvc","args","nb.miniTask.miniTaskDialog","nb.systemmodel.httpDeviceIconSrvc"];function nbController($scope,$log,$uibModal,$uibModalInstance,httpMiniTaskSrvc,DeviceTypeMgrSrvc,DeviceTypeMainMgrSrvc,args,miniTaskDialog,httpDeviceIconSrvc){var tabSet=[{id:2,name:"Live Log",index:5,visible:!0,view:"modules/nbMiniTask/framework/views/miniTaskViewDetailLiveLog.html"},{id:3,name:"General Table",index:2,visible:!0,view:"modules/nbMiniTask/framework/views/miniTaskViewDetailGerenalTable.html"},{id:4,name:"NCT Table",index:3,visible:!0,view:"modules/nbMiniTask/framework/views/miniTaskViewDetailNctTable.html"},{id:5,name:"Configuration File",index:1,visible:!0,view:"modules/nbMiniTask/framework/views/miniTaskViewDetailConfigurationFile.html"}];var _initDeviceImg=function(devType,oid,deleted){return httpDeviceIconSrvc.getIconStreamURIBy2Id(devType,oid,{state:deleted?1:0})};$scope.dataModel={sourceId:"",aLogId:"",deviceSet:[],tabSet:tabSet,selectTabIndex:1,curTab:tabSet[0],curDevice:null,curDeviceName:null,defaultDeviceId:null,showCsv:!1,filter:"",hasDeviceStyle:args.hasDeviceStyle};$scope.onShowCsv=function(){$uibModal.open({templateUrl:"modules/nbMiniTask/framework/views/miniTaskQappCsv.html",controller:"nb.miniTask.miniTaskQappCsvCtrl",backdrop:!0,size:"sm",windowClass:"miniTaskQappCsv",resolve:{args:function(){return{aLogId:$scope.dataModel.aLogId}}}})};$scope.onFilter=function(){var dataModel=$scope.dataModel;var lFilter=dataModel.filter.trim().toLowerCase();lFilter?dataModel.deviceSet.forEach((function(ele){ele.devName.toLowerCase().indexOf(lFilter)>=0?ele.hidden=!1:ele.hidden=!0})):dataModel.deviceSet.forEach((function(ele){ele.hidden=!1}))};$scope.onSearch=function(e){13===e.keyCode&&$scope.onFilter()};$scope.clearFilterKeyword=function(){$scope.dataModel.filter="";$scope.onFilter()};$scope.onCancel=function(){$uibModalInstance.close("Cancel")};$scope.onOK=function(){$uibModalInstance.close("OK")};!function(dataModel){if(args&&angular.isObject(args)){nbPLM.Common.merge(dataModel,args,(function(attr){return"tabSet"!==attr}));if(args.tabSet){var map={};args.tabSet.forEach((function(ele){map[ele.id]=ele}));dataModel.tabSet.forEach((function(ele){if(map[ele.id]){nbPLM.Common.merge(ele,map[ele.id]);delete map[ele.id]}}));for(var attr in map)map.hasOwnProperty(attr)&&map[attr]&&dataModel.tabSet.push(map[attr]);dataModel.tabSet.sort((function(e1,e2){return e1.index-e2.index}));var curIndex=-1;dataModel.tabSet.some((function(ele,index){if(ele.visible&&ele.showOnly){curIndex=index;return!0}}))&&curIndex>=0&&dataModel.tabSet.forEach((function(ele,index){index!==curIndex&&(ele.visible=!1)}))}}!function(dataModel){dataModel.aLogId&&httpMiniTaskSrvc.aLog.getLiveLogDevices(dataModel.aLogId).then((function(data){dataModel.deviceSet.splice(0,dataModel.deviceSet.length);if(data&&data.length>0){data.forEach((function(ele){var toolTip="";if(ele.deleted)if("network server"===ele.name.toLowerCase()||"proxy server"===ele.name.toLowerCase()){ele.name="Proxy Server";toolTip=ele.name}else toolTip=ele.name+" is not in current domain";else toolTip=ele.name;dataModel.deviceSet.push({deviceId:ele.id,devName:ele.name,subType:ele.subType,iconType:_initDeviceImg(ele.subType,ele.oid,ele.deleted),index:-1,toolTip:toolTip})}));dataModel.deviceSet.sort((function(ele1,ele2){return ele1.devName>ele2.devName?1:-1}));if(!dataModel.defaultDeviceId||!dataModel.deviceSet.some((function(ele){if(ele.deviceId===dataModel.defaultDeviceId){dataModel.curDevice=ele.deviceId;dataModel.curDeviceName=ele.devName;return!0}}))){dataModel.curDevice=dataModel.deviceSet[0].deviceId;dataModel.curDeviceName=dataModel.deviceSet[0].devName}dataModel.defaultDeviceId&&(dataModel.defaultDeviceId=null)}}),(function(msg){}))}(dataModel)}($scope.dataModel)}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").filter("nbMapSessionPointTimeFormat",(function($filter){return function(dateStr){var date=new Date(dateStr),now=new Date;return date.getFullYear()===now.getFullYear()?date.getMonth()===now.getMonth()&&date.getDate()===now.getDate()?TimeUtil.format(date,"HH:mm tt"):TimeUtil.format(date,"MM-dd"):TimeUtil.format(date,"yyyy")}})).filter("visibleTabsFilter",(function($filter){return function(data,query){_.map(data,(function(item){item.isHidden=!1}));if(null==query||""==query)return data;query=query.toLowerCase();_.map(data,(function(item){-1!==item.userName.toLowerCase().indexOf(query)?item.isHidden=!1:item.isHidden=!0}));return data}})).filter("retrieveLiveDataChangeStatusText",(function(){return function(value){return"Succeed"==value?"Succeeded":"Fail"==value?"Failed":value}}));angular.module("nb.miniTask").filter("parseDate",["nb.miniTask.miniTaskFrameworkUtilsSrvc",function(miniTaskFrameworkUtilsSrvc){return miniTaskFrameworkUtilsSrvc.parseDate}])}(NetBrain);NetBrain,angular.module("nb.miniTask").filter("nbDispTableName",(function($filter){return function(curTable){return curTable&&curTable.id?curTable.name+"-"+DateUtil.format(new Date(curTable.opTime),"yyyyMMdd hhmmss"):""}})).filter("nbDispQappName",(function(){return function(tableIndex){return tableIndex?"Qapp Name: "+tableIndex.appName+" ("+tableIndex.tables.length+")":""}}));var MiniTask=function(miniTask){miniTask.MiniTaskType={qapp:1,ping:4,traceRoute:5,retrieveLiveData:7,runCliCommand:13};return miniTask}(MiniTask||{});!function(netBrain){var runSaveMapTipInfo={};!function(){var type=MiniTask.MiniTaskType;runSaveMapTipInfo[type.qapp]="A Qapp cannot be run on an unsaved map. Do you want to save the map first?";runSaveMapTipInfo[type.ping]="Ping cannot be run on an unsaved map. Do you want to save the map first?";runSaveMapTipInfo[type.traceRoute]="Traceroute cannot be run on an unsaved map. Do you want to save the map first?";runSaveMapTipInfo[type.retrieveLiveData]="Retrieve Live Data cannot be run on an unsaved map. Do you want to save the map first?";runSaveMapTipInfo[type.runCliCommand]="Execute CLI commands cannot be run on an unsaved map. Do you want to save the map first?";runSaveMapTipInfo[10]="This operation cannot be run on an unsaved map. Do you want to save the map first?"}();angular.module("nb.miniTask").controller("nb.miniTask.miniTaskUtilCtrl",miniTaskUtilCtrl);miniTaskUtilCtrl.$inject=["$scope","$q","$uibModal","$document","$timeout","$rootScope","nb.ng.userSrvc","nb.miniTask.miniTaskUtilSrvc","nb.activity.activityContext","nb.ng.httpAuthSrvc","nb.qmap.updateMapSrvc","nb.qmap.mapManagerSrvc","nb.common.nbAlertSrvc"];function miniTaskUtilCtrl($scope,$q,$uibModal,$document,$timeout,$rootScope,userSrvc,miniTaskUtilSrvc,activityContext,httpAuthSrvc,updateMapSrvc,mapManagerSrvc,nbAlertSrvc){var arrDomain=httpAuthSrvc.getSelectedDomains();var selectDomain=arrDomain.length>0?arrDomain[0].guid:null;var hubBusinessId="";$scope.buildHubBusinessId=function(){hubBusinessId||(hubBusinessId=userSrvc.getUserID()+"_"+$scope.$mapPageId);return hubBusinessId};$scope.init=function(mapPageObj){!function(mapPageObj){$scope.mapPageObj=mapPageObj;$scope.$mapPageObj=mapPageObj;$scope.$mapId=mapPageObj.getParentQmap().getDocId();$scope.$mapPageId=mapPageObj.getDocId();$scope.$mapPageDomId="realPage-"+mapPageObj.getDocId()+"-container";$scope.$mapPageScope=mapPageObj.getCurrentScope();$scope.mapInfo={mapId:$scope.$mapId,mapPageId:$scope.$mapPageId};$scope.selectDomain=selectDomain}(mapPageObj);var viewMiniTaskId="miniTask-"+$scope.$mapPageId+$scope.model.miniTaskType;0==$scope.model.miniTaskType&&($scope.mapPageObj._activityDialogScope=$scope);$scope.miniTaskType=$scope.model.miniTaskType;$scope.viewMiniTaskId=viewMiniTaskId;$scope.stopEvent=function($event){$event.stopPropagation()};var offDocumentCkick=function(viewId){var selfClick="click."+viewId;$(document).on(selfClick,(function(event){$scope.$broadcast("DocumentClick",event)}));return function(){$(document).off(selfClick)}}(viewMiniTaskId);var offDocumentmouseDown=function(viewId){var selfMouseDown="mousedown."+viewId;$(document).on(selfMouseDown,(function(event){}));return function(){$(document).off(selfMouseDown)}}(viewMiniTaskId);var offDialogMousedown=function(viewId){var eventName="mousedown.dialog"+viewId;var ele=$("#"+viewId);ele.on(eventName,(function(){$scope.$broadcast("dialogMouseDown",event,ele)}));return function(){ele.off(eventName);ele=null;eventName=null}}(viewMiniTaskId);$scope.$on("$destroy",(function(){offDocumentCkick();offDocumentmouseDown();offDialogMousedown()}))};$scope.setMapModified=function(){$scope.$mapPageObj.setModify(!0)};$scope.getVisibleInfts=function(){return miniTaskUtilSrvc.getVisibleInfts($scope.$mapPageObj)};$scope.canUpdateCurrentMap=function(){return updateMapSrvc.canUpdateCurrentMap()};$scope.getTargetDeviceBriefInfo=function(){var deviceCategories={devices:"Devices",sites:"Sites",deviceGroups:"Device Groups",paths:"PathNew"};var strBriefInfo="";var target=function(objTarget){if(!objTarget)return objTarget;var target={};_.each(objTarget,(function(val,key){deviceCategories[key]&&val&&val.length>0&&(target[key]=objTarget[key])}));return target}($scope.model.oldTargetDevice||{});var targetKeys=_.keys(target);for(var key in target){var item=target[key];if(1===item.length&&1===targetKeys.length){return(0===(strBriefInfo+=item[0].name+",").length?strBriefInfo:strBriefInfo.substr(0,strBriefInfo.length-1))||"None"}strBriefInfo+=item.length+" "+key.replace(/(\w)/,(function(v){return v.toUpperCase()}))+", "}return(0===strBriefInfo.length?strBriefInfo:strBriefInfo.substr(0,strBriefInfo.length-2))||"None"};$scope.savedMap=function(){var deferred=$q.defer();var activeDoc=mapManagerSrvc.getActiveMap();var activePage=mapManagerSrvc.getActivePage();activeDoc.getNew()||activePage.getNew()?nbAlertSrvc.confirm(runSaveMapTipInfo[$scope.model.miniTaskType]).then((function(){mapManagerSrvc.saveMap().then((function(){deferred.resolve()}),(function(){deferred.reject()}))}),(function(ex){deferred.reject(ex)})):deferred.resolve();return deferred.promise}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").controller("nb.miniTask.miniTaskDialogCtrl",miniTaskDialogCtrl);miniTaskDialogCtrl.$inject=["$rootScope","$scope","$q","$log","$uibModal","$timeout","nb.miniTask.miniTaskDialogSrvc","nb.cliMiniTask.minitaskConfigForTypeSrvc"];function miniTaskDialogCtrl($rootScope,$scope,$q,$log,$uibModal,$timeout,miniTaskDialogSrvc,minitaskConfigForTypeSrvc){var miniTaskIcons=minitaskConfigForTypeSrvc.showAll();var mapPageId=$scope.model.mapPageObj.getDocId();$scope.model.mapPageObj.$mapPageScope=$scope.model.mapPageObj.getCurrentScope();$scope.event={};$scope.titleShow={};$scope.titleShow.disableMinChange=$scope.model.disableMinChange;$scope.titleShow.disableClose=$scope.model.disableClose||void 0;$scope.titleShow.currentDialogIcon=miniTaskIcons[$scope.model.miniTaskType]&&miniTaskIcons[$scope.model.miniTaskType].icon||$scope.model.miniTaskIcon;$scope.titleShow.currentDialogName=miniTaskIcons[$scope.model.miniTaskType]&&miniTaskIcons[$scope.model.miniTaskType].name||$scope.model.miniTaskName;$scope.titleShow.currentMinChangeIcon=miniTaskIcons[$scope.model.miniTaskType]&&miniTaskIcons[$scope.model.miniTaskType].minChangeIcon||$scope.model.minChangeIcon;$scope.dialogId=miniTaskDialogSrvc.getDialogId($scope.model);$("#realPage-"+mapPageId+"-container").delegate("#"+$scope.dialogId,"mousedown.otherDialogEmit",bindOtherDialogEmit);function bindOtherDialogEmit(){$rootScope.$broadcast("listenerDialogClickChange",$scope.titleShow.currentDialogName)}$scope.resetDialogId=function(newDialogId,oldDialogId){if(miniTaskDialogSrvc.existMiniTaskDialog(oldDialogId)){miniTaskDialogSrvc.resetDialogId(newDialogId,oldDialogId);$("#"+$scope.dialogId).get(0)&&$("#realPage-"+mapPageId+"-container").undelegate("#"+$scope.dialogId,"mousedown.otherDialogEmit",bindOtherDialogEmit);$scope.dialogId=newDialogId;$("#realPage-"+mapPageId+"-container").delegate("#"+$scope.dialogId,"mousedown.otherDialogEmit",bindOtherDialogEmit);miniTaskDialogSrvc.updateDialogMinManageFunc(newDialogId,oldDialogId)}};$scope.refreshTitle=function(obj){obj.disableMinChange&&($scope.titleShow.disableMinChange=obj.disableMinChange);obj.currentDialogIcon&&($scope.titleShow.currentDialogIcon=obj.currentDialogIcon);obj.currentDialogName&&($scope.titleShow.currentDialogName=obj.currentDialogName)};$scope.removeEvent=function(eventName){$scope.event[eventName]=void 0};$scope.addEvent=function(eventName,fn,data){$scope.event[eventName]={fn:fn,data:data,eventName:eventName}};$scope.closeMiniTaskDialog=function(id){miniTaskDialogSrvc.closeMinitaskDialogBefore(id,$scope)};$scope.minChangeMiniTaskDialog=miniTaskDialogSrvc.minChangeMiniTaskDialog;$scope.model.mapPageObj.getCurrentScope().$on("$destroy",(function(){miniTaskDialogSrvc.clearMiniTaskDialog(mapPageId)}));miniTaskDialogSrvc.addDialogMinManageFunc($scope.dialogId,(function(minChange){$scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty||($scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty={});$scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty.isEmpty=_.isEmpty(minChange)}));$scope.$watch((function(){return $scope.model.mapPageObj.$mapPageScope.minChangeManage}),(function(minChange){$scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty||($scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty={});$scope.model.mapPageObj.$mapPageScope.isMiniChangeEmpty.isEmpty=_.isEmpty(minChange)}),!0);var dialogPositionWatcher=$scope.$watch((function(){return $("#realPage-"+mapPageId+"-container").width()}),(function(pageWidth,pageWidthOld){$scope.model.mapPageObj.realActive&&pageWidth>pageWidthOld&&$(".ui-dialog:visible").each((function(){parseInt($(this).css("top"))<0&&$(this).css("top",0)}))}));$scope.$on("$destroy",(function(){dialogPositionWatcher();miniTaskDialogSrvc.removeDialogMinManageFunc($scope.dialogId);$("#"+$scope.dialogId).get(0)&&$("#realPage-"+mapPageId+"-container").undelegate("#"+$scope.dialogId,"mousedown.otherDialogEmit",bindOtherDialogEmit)}));$scope.model.mapPageObj.currentScopeRef.$on("$destroy",(function(){miniTaskDialogSrvc.clearMinChangeManageByPageId(mapPageId)}));$scope.minChageCallback=function(dialog,dialogId){var item={icon:$scope.titleShow.currentMinChangeIcon,action:function(dialog){return function(){var parentElement=dialog.parent();dialog.attr({tabIndex:-1}).appendTo(parentElement);dialog.show();delete $scope.model.mapPageObj.$mapPageScope.minChangeManage[dialogId];$rootScope.$broadcast("listenerDialogClickChange","from minChange",dialog)}}(dialog)};miniTaskDialogSrvc.setMinChangeManage(mapPageId,dialogId,item);var minChangeManage=miniTaskDialogSrvc.getMinChangeManageByPageId(mapPageId);_.isEmpty($scope.model.mapPageObj.$mapPageScope.minChangeManage)&&($scope.model.mapPageObj.$mapPageScope.minChangeManage=minChangeManage)};$scope.onHeaderMouseDown=function(){$(document).click()};if($scope.model.initMini){!function DelayRun(){miniTaskDialogSrvc.getExistingDialog($scope.dialogId)?$scope.minChangeMiniTaskDialog($scope.dialogId,$scope.minChageCallback):$timeout(DelayRun,100)}();delete $scope.model.initMini}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").controller("nb.miniTask.targetDeviceCtrl",targetDeviceCtrl);targetDeviceCtrl.$inject=["$scope","$uibModal","$document","$timeout","$rootScope","args","$uibModalInstance","ivhTreeviewBfs","nb.miniTask.miniTaskUtilSrvc"];function targetDeviceCtrl($scope,$uibModal,$document,$timeout,$rootScope,args,$uibModalInstance,ivhTreeviewBfs,miniTaskUtilSrvc){var _filterText=null;$scope.tipcallback=function(m){return checkPass().length>0};$scope._init=function(){$scope.objTargetDeviceTreeData=[];var arrTarget=miniTaskUtilSrvc.getFiltedDevice(args.miniTaskId,args.mapPageObj);arrTarget.length>0&&$scope.objTargetDeviceTreeData.push({id:1,name:"Devices",value:"devices",items:arrTarget});$scope.objTargetDeviceTreeData.forEach((function(childern){_defineNodeHighlightNameProperty(childern);childern._match=!0;_defineNodeHideProperty(childern);void 0!==childern.items&&childern.items.forEach((function(item){item._match=!0;_defineNodeHighlightNameProperty(item);_defineNodeHideProperty(item)}))}))};function _defineNodeHighlightNameProperty(node){Object.defineProperty(node,"highlightName",{get:function(){var _filter=_filterText?_filterText.replace(/([\*\.\?\+\$\^\[\]\(\)\{\}\|\\])/g,(function(c){return"\\"+c})):null;return _filter?node.name.replace(new RegExp("("+_filter+")","gi"),'<span style="background-color: yellow;">$1</span>'):node.name}})}function _defineNodeHideProperty(node){var _hide=!1;Object.defineProperty(node,"hide",{get:function(){node._match?_hide=!1:void 0!==node.items?node.items.forEach((function(item){item.hide||(_hide=!1)})):_hide=!0;return _hide}})}function checkPass(){var selectedItems=[];ivhTreeviewBfs($scope.objTargetDeviceTreeData,(function(node,arrParent){node.selected&&node._match&&arrParent.length>0&&selectedItems.push({id:node.id,name:node.name,domainId:node.domainID});return!0}));return selectedItems}$scope.onOk=function(ele){var selectedItems=checkPass();selectedItems.length<=0||$uibModalInstance.close(selectedItems)};$scope.onCancle=function(){$uibModalInstance.dismiss("Cancel")};$scope.onFilterChanged=function(){_filterText=$scope.keyword;$scope.objTargetDeviceTreeData.forEach((function(childern){childern.expended=!0;!function filterNode(node,keyword){if(keyword){node._match=node.name.toUpperCase().indexOf(keyword.toUpperCase())>-1;node.expended=!0}else node._match=!0;void 0!==node.items&&node.items.forEach((function(item){filterNode(item,keyword)}),this)}(childern,_filterText)}))};$scope._init()}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.miniTaskDialogSrvc",miniTaskDialogSrvc);miniTaskDialogSrvc.$inject=["$q","$rootScope","dialogService"];function miniTaskDialogSrvc($q,$rootScope,dialogService){var exports={};var dialogManage={};var dialogMinManageFunc={};var minChangeManageObj_manageObj=[];exports.showMiniTaskDialog=function(options){var mapPageId=options.mapPageObj.getDocId(),activePageDivId="#realPage-"+mapPageId+"-container",_pageTop=$(activePageDivId).offset().top,_pageLeft=$(activePageDivId).offset().left,_pageWidth=$(activePageDivId).width(),_pageHeight=$(activePageDivId).height();var miniTaskPopUpOptions={width:578,autoOpen:!1,modal:!1,resizable:!0,minWidth:578,containment:$("#realPage-"+mapPageId+"-container"),position:{my:"center center",at:"center center",within:$("#realPage-"+mapPageId+"-container")},appendTo:$("#realPage-"+mapPageId+"-container"),draggable:{cancel:".miniTaskUtil",containment:".realActive .map-canvas-containter"},beforeClose:function(event,ui){if(27!==event.keyCode)return!0;var VDOM=angular.element(event.target).find('[id^="miniTask-"]');if(1==VDOM.length){var newId=VDOM.attr("id");var Vscope=VDOM.scope();exports.closeMinitaskDialogBefore(newId,Vscope);return!1}}};options&&17===options.miniTaskType&&(miniTaskPopUpOptions.draggable.containment=[-1100,_pageTop,_pageLeft+_pageWidth-50,_pageTop+_pageHeight-50]);miniTaskPopUpOptions=_.extend(miniTaskPopUpOptions,options.dialogOptions);var id=__getDialogId(options);var template=miniTaskPopUpOptions.template||"miniTaskDialogTemplate_modal.html";if(this.existMiniTaskDialog(id)){if(options.reopenFlag){$rootScope.$broadcast("reopen"+id,options);exports.openMiniTaskDialog(id)}}else{dialogManage[id]=!0;dialogService.open(id,template,options,miniTaskPopUpOptions)}if(options.dialogOptions.async){var deferd=$q.defer();options.dialogOptions.async=deferd;return deferd.promise}return $q.resolve()};exports.addDialogMinManageFunc=function(id,func){dialogMinManageFunc[id]=func};exports.removeDialogMinManageFunc=function(id){dialogMinManageFunc[id]&&delete dialogMinManageFunc[id]};exports.updateDialogMinManageFunc=function(newid,oldid){dialogMinManageFunc[oldid]&&(dialogMinManageFunc[newid]=dialogMinManageFunc[oldid])};exports.getDialogMinManageFunc=function(id){return dialogMinManageFunc[id]};exports.getExistingDialog=function(id){return dialogService.getExistingDialog(id)};exports.existMiniTaskDialog=function(id){return document.getElementById(id)&&dialogManage[id]};exports.closeMiniTaskDialog=function(dialogId,fn){var dialogInfo=existMiniTaskDialog(dialogId);if(dialogInfo.dialogNode&&dialogInfo.dialogManageId){dialogId.endsWith("14")&&$rootScope.$emit(dataViewTemplateEvent.runDataViewTemplateFinish);dialogService.close(dialogId);delete dialogManage[dialogId]}else if(dialogInfo.dialogNode&&!dialogInfo.dialogManageId){$(dialogInfo.dialogNode).parents(".ui-dialog").hide();dialogService.close(dialogId)}_.isFunction(fn)&&fn.apply(null,arguments);exports.removeMinChangeManage(dialogId)};exports.closeMinitaskDialogBefore=function(id,$scope){var beforeClose=!0;$scope.event.closeDialog&&angular.isFunction($scope.event.closeDialog.fn)&&(beforeClose=$scope.event.closeDialog.fn($scope.event.closeDialog.data));$scope.model.dialogOptions.async&&$scope.model.dialogOptions.async.reject&&$scope.model.dialogOptions.async.reject();$q.when(beforeClose).then((function(data){if(data){$scope.removeEvent("closeDialog");exports.closeMiniTaskDialog(id)}}))};exports.clearMiniTaskDialog=function(mapPageId){var keys=_.allKeys(dialogManage);var filterKeys=_.filter(keys,(function(key){return-1!==key.indexOf(mapPageId)}));_.map(filterKeys,(function(key){dialogService.close(key);delete dialogManage[key]}))};exports.clearMinChangeManageByPageId=function(pageId){var minChangeManage=minChangeManageObj_manageObj;var existPageIdMin=_.findIndex(minChangeManage,(function(item){return item.pageId==pageId}));if(-1!=existPageIdMin)return minChangeManage.splice(existPageIdMin,1)};exports.setMinChangeManage=function(pageId,dialogId,minItem){var minChangeManage=minChangeManageObj_manageObj;var existPageIdMin=_.findIndex(minChangeManage,(function(item){return item.pageId==pageId}));if(-1!=existPageIdMin)minChangeManage[existPageIdMin].manageMin[dialogId]||(minChangeManage[existPageIdMin].manageMin[dialogId]=minItem);else{var temp={pageId:pageId,manageMin:{}};temp.manageMin[dialogId]=minItem;minChangeManage.push(temp)}};exports.removeMinChangeManage=function(dialogId){var minChangeManage=minChangeManageObj_manageObj;var tempItem=_.find(minChangeManage,(function(item){return!!item.manageMin[dialogId]}));if(tempItem){var existPageIdMin=_.findIndex(minChangeManage,(function(item){return item.pageId==tempItem.pageId}));minChangeManage[existPageIdMin].manageMin[dialogId]&&delete minChangeManage[existPageIdMin].manageMin[dialogId];var func=this.getDialogMinManageFunc(dialogId);func&&func(minChangeManage[existPageIdMin].manageMin)}};exports.getMinChangeManageByPageId=function(pageId){var minChangeManage=minChangeManageObj_manageObj;var existPageIdMin=_.findIndex(minChangeManage,(function(item){return item.pageId==pageId}));return-1==existPageIdMin?{}:minChangeManage[existPageIdMin].manageMin};exports.minChangeMiniTaskDialog=function(dialogId,minChageCallback){var dialog=$("#"+dialogId).closest(".ui-dialog");dialog.hide();minChageCallback(dialog,dialogId)};exports.openMiniTaskDialog=function(dialogId){var dialog=$("#"+dialogId).closest(".ui-dialog");var parentElement=dialog.parent();exports.removeMinChangeManage(dialogId);dialog.appendTo(parentElement);dialog.show()};exports.resetDialogId=function(newDialogId,dialogId){if(dialogManage[dialogId]){dialogService.resetDialogId(newDialogId,dialogId);delete dialogManage[dialogId]}dialogManage[newDialogId]=!0};exports.getDialogId=__getDialogId;exports.replaceDialogId=function(currDialogId,newRbaResultId){if(this.existMiniTaskDialog(currDialogId)){var newDialogId;var index=currDialogId.lastIndexOf("@");if(-1!=index){var oldRbaResultId=currDialogId.slice(index+1);newDialogId=currDialogId.replace(oldRbaResultId,newRbaResultId)}else newDialogId=currDialogId+"@"+newRbaResultId;$("#"+currDialogId).attr("id",newDialogId);dialogManage[currDialogId]=!1;dialogManage[newDialogId]=!0;return newDialogId}};exports.closeDialogWithChangedRBA=function(rbaId){var dialogIdList=_.allKeys(dialogManage);for(var i=0;i<dialogIdList.length;i++)-1!=dialogIdList[i].indexOf(rbaId)&&this.closeMiniTaskDialog(dialogIdList[i])};return exports;function __getDialogId(options){var pageId=options.mapPageObj.getDocId();return!angular.isDefined(options.runFrom)||1!==options.runFrom.type&&2!==options.runFrom.type?"miniTask-"+pageId+options.activityId+options.miniTaskType:16===options.miniTaskType?"RBA-miniTask-"+pageId+"-"+options.runFrom.fromId+"-"+options.runFrom.nodeId+"-"+options.miniTaskType:"RBA-miniTask-"+pageId+"-"+options.runFrom.fromId+"-"+options.runFrom.nodeId+"-"+options.activityId+"-"+options.miniTaskType}function existMiniTaskDialog(id){return{dialogNode:document.getElementById(id),dialogManageId:dialogManage[id]}}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.cliMiniTask.minitaskConfigForTypeSrvc",minitaskConfigForTypeSrvc);minitaskConfigForTypeSrvc.$inject=["$q","$timeout"];function minitaskConfigForTypeSrvc($q,$timeout){var typeConfig={2:{icon:"run-cli-command-16",name:"Cli"},0:{icon:"activity-management-16",name:"Activity Manager",minChangeIcon:"activity-management"},1:{icon:"run-qapp-16",name:"Run Qapp",minChangeIcon:"run-qapp"},4:{icon:"ping-to-16",name:"Ping",minChangeIcon:"ping-to"},5:{icon:"trace-route-to-16",name:"Traceroute",minChangeIcon:"trace-route-to"},7:{icon:"retrieve-live-data-16",name:"Retrieve Live Data",minChangeIcon:"retrieve-live-data"},8:{icon:"map-based-data-search",name:"Instant Qapp",minChangeIcon:"icon_nb_qapp"},10:{icon:"control-panel-16",name:"Control Panel",minChangeIcon:"control-panel"},13:{icon:"run-cli-command-16",name:"Execute CLI Commands",minChangeIcon:"run-cli-command"},14:{icon:"data-view-template",name:"Create Data View from Template",minChangeIcon:"data-view-template-40"},15:{icon:"icon-qapp-event-16",name:"Qapp Events",minChangeIcon:"icon-qapp-event"},16:{icon:"cm-networkchange-16",name:"Network Change",minChangeIcon:"cm-networkchange"},17:{icon:"map-data-folder-manager-16",minChangeIcon:"map-data-folder-manager",name:"Map Data Folder Manager"},100:{icon:"activity-management-16",name:"Search activities by keyword",minChangeIcon:"activity-management"}};this.getConfigByType=function(name){return typeConfig[name]};this.setConfigByType=function(name,config){return typeConfig[name]?angular.merge(typeConfig[name],config):typeConfig[name]=config};this.showAll=function(){return angular.copy(typeConfig)}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.miniTaskUtilSrvc",miniTaskUtilSrvc);miniTaskUtilSrvc.$inject=["$q","$rootScope","$uibModal","nb.miniTask.miniTaskDialogSrvc","nb.ng.permissionSrvc","nb.common.nbAlertSrvc","nb.miniTask.targetDeviceSrvc","nb.ng.nbHttp","nb.ng.utilitySrvc"];var filterDevTypes=[1024,1037,3002];function miniTaskUtilSrvc($q,$rootScope,$uibModal,miniTaskDialogSrvc,permissionSrvc,nbAlertSrvc,targetDeviceSrvc,nbHttp,utilitySrvc){var exports={};var miniTaskDeviceManage={};exports.showMiniTaskDialog=function(options,isForRunBook){var firstMerge;options.activityId=options.activityId||"";var id=miniTaskDialogSrvc.getDialogId(options);var dialogIsExist=miniTaskDialogSrvc.existMiniTaskDialog(id);var selectedDevices=exports.getSelectedDeviceOnMap(options.mapPageObj,14==options.miniTaskType);var defaultDeveice=exports.getDeviceOnMap(options.mapPageObj,14==options.miniTaskType);if(dialogIsExist){if(!options.activityId&&(options.mapBarTaskType||options.taskType)){selectedDevices.hasSelectedDevice&&(options.selectedDevices=selectedDevices.devices[0]);options.dialogId=id;$rootScope.$broadcast("refreshPingTrace",options)}miniTaskDialogSrvc.openMiniTaskDialog(id)}var miniTaskDevice;if(defaultDeveice.devices){switch(options.miniTaskType){case 2:if(!dialogIsExist){if(!selectedDevices.hasSelectedDevice)return exports.onTargetDevicePopout({miniTaskId:id,mapPageObj:options.mapPageObj}).result.then((function(result){exports.setMiniTaskDevice(id,result);options.miniTaskTargetDevice=result;return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{width:852}}))}));if(selectedDevices.hasSelectedDevice){exports.setMiniTaskDevice(id,selectedDevices.devices);options.miniTaskTargetDevice=selectedDevices.devices;return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{width:852}}))}}if(selectedDevices.hasSelectedDevice&&(miniTaskDevice=exports.getMiniTaskDevice(id))){firstMerge=mergeDevice(selectedDevices.devices,miniTaskDevice);exports.addMiniTaskDevice(id,firstMerge)}break;case 1:if((option=options).runFrom&&(1==option.runFrom.type||2==option.runFrom.type))return __showQappMiniTaskDialog(id,options);if(!dialogIsExist){if(isForRunBook)return exports.openSelectQappDialog(options,options.bBreakSelect||!1);exports.openSelectQappDialog(options,options.bBreakSelect||!1).then((function(data){if(data&&data.length>0){options.selectQappList=data;return __showQappMiniTaskDialog(id,options)}}))}break;case 7:case 13:if(!dialogIsExist){if(!selectedDevices.hasSelectedDevice){options.oldTargetDevice||(options.oldTargetDevice=exports.getDeviceOnMap(options.mapPageObj,14==options.miniTaskType));return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{width:852,resizable:!1}}))}if(selectedDevices.hasSelectedDevice){options.oldTargetDevice||(options.oldTargetDevice=selectedDevices);return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{width:852,resizable:!1}}))}}break;case 14:dialogIsExist||function(id,opts){var devices=exports.getFiltedDevice(id,opts.mapPageObj,!0);exports.setMiniTaskDevice(id,devices);opts.miniTaskTargetDevice=devices;opts.oldTargetDevice||(opts.oldTargetDevice=exports.getTargetDeviceOnMap(opts.mapPageObj,!1,!0));miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(opts,{dialogOptions:{resizable:!1,height:"auto",width:"auto",left:300,top:160}}))}(id,options);break;case 3:case 4:case 5:case 6:if(!dialogIsExist){selectedDevices.hasSelectedDevice&&(options.selectedDevices=selectedDevices.devices[0]);!function(id,opts){var devices=exports.getFiltedDevice(id,opts.mapPageObj,!1);exports.setMiniTaskDevice(id,devices);opts.miniTaskTargetDevice=devices;opts.oldTargetDevice||(opts.oldTargetDevice=exports.getTargetDeviceOnMap(opts.mapPageObj));opts.mapBarTaskType&&opts.oldTargetDevice.hasSelectedDevice&&opts.oldTargetDevice.devices&&1==opts.oldTargetDevice.devices.length&&(opts.taskType=opts.mapBarTaskType);miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(opts,{dialogOptions:{resizable:!1,height:"auto",width:965}}))}(id,options)}break;case 17:if(!dialogIsExist){selectedDevices.hasSelectedDevice&&(options.selectedDevices=selectedDevices.devices[0]);!function(id,opts){var devices=exports.getFiltedDevice(id,opts.mapPageObj,!1);exports.setMiniTaskDevice(id,devices);opts.miniTaskTargetDevice=devices;opts.oldTargetDevice||(opts.oldTargetDevice=exports.getTargetDeviceOnMap(opts.mapPageObj));miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(opts,{dialogOptions:{resizable:!1,height:"auto",width:1185}}))}(id,options)}break;case 16:dialogIsExist||(opts=options,miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(opts,{dialogOptions:{resizable:!1,height:"auto",width:852}})));break;default:return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{resizable:!1,height:"auto",minWidth:"auto"}}))}var opts;var option}else nbAlertSrvc.alert("Have no device on map to use!")};exports.onRunQappForRunbook=function(fullPath,activtePage){nbHttp.post("qapp/qappinfo/getQappInfo",fullPath,{avoidBlockUI:!0}).then((function(data){if(data){var qapps=[{qappId:data.id,qappName:data.name}];$rootScope.$broadcast("MiniTask.Qapp.onAddQapps",{mapPageObj:activtePage,qapps:qapps})}else nbAlertSrvc.error("This Qapp no longer exists.")}),(function(msg){nbAlertSrvc.alert(msg.ResultDesc)}))};exports.onRunQappForFullPath=function(fullPath,activtePage,oldTargetDevice){nbHttp.post("qapp/qappinfo/getQappInfo",fullPath,{avoidBlockUI:!0}).then((function(data){if(data){var qapps=[{qappId:data.id,qappName:data.name,qappPath:data.path}];$rootScope.$broadcast("MiniTask.Qapp.onAddQapps",{mapPageObj:activtePage,qapps:qapps});exports.showMiniTaskDialog({miniTaskType:1,mapPageObj:activtePage,bBreakSelect:!0,qapps:qapps,oldTargetDevice:oldTargetDevice})}else nbAlertSrvc.error("This Qapp no longer exists.")}),(function(msg){nbAlertSrvc.alert(msg.ResultDesc)}))};function __showQappMiniTaskDialog(id,options){var devices=exports.getFiltedDevice(id,options.mapPageObj,!1);exports.setMiniTaskDevice(id,devices);options.miniTaskTargetDevice=devices;options.oldTargetDevice||(options.oldTargetDevice=exports.getTargetDeviceOnMap(options.mapPageObj,!0));options.disableMinChange=!0;return miniTaskDialogSrvc.showMiniTaskDialog(angular.merge(options,{dialogOptions:{resizable:!1,height:"auto"}}))}exports.getFiltedDevice=function(id,mapPageObj,bIncludeNonRealDevice){var defaultDeveice=exports.getDeviceOnMap(mapPageObj,bIncludeNonRealDevice);var miniTaskDevice=exports.getMiniTaskDevice(id);return miniTaskDevice?mergeDevice(defaultDeveice.devices,miniTaskDevice):defaultDeveice.devices};exports.getMiniTaskDevice=function(id){return miniTaskDeviceManage[id]};exports.setMiniTaskDevice=function(id,miniTaskDevice){miniTaskDevice=function(obj){if(!_.isArray(obj)){var temp=[];temp.push(obj);return obj=temp}return obj}(miniTaskDevice);miniTaskDeviceManage[id]=_.flatten(miniTaskDevice)};exports.addMiniTaskDevice=function(id,miniTaskDevice){miniTaskDeviceManage[id]=_.union(_.flatten(miniTaskDeviceManage[id]),miniTaskDevice)};exports.deleteDevice=function(id,miniTaskDevice){return miniTaskDeviceManage[id]=_.filter(_.flatten(miniTaskDeviceManage[id]),(function(device){return device.id!=miniTaskDevice.id}))};exports.clearMiniTaskDevice=function(id){miniTaskDeviceManage[id]={}};exports.onTargetDevicePopout=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/miniTaskUtils/views/targetDevice.html",controller:"nb.miniTask.targetDeviceCtrl",windowClass:"executionTargetDeviceSelectPopup",backdrop:"static",keyboard:!1,size:"sm",resolve:{args:function(){return{mapPageObj:options.mapPageObj,miniTaskId:options.miniTaskId}}}})};exports.getSelectedDeviceOnMap=function(mapPageObj,bIncludeNonRealDevice){var deviceStruct={};var deviceCategory={name:"devices",category:netBrain.Map.CategoryMgr.NetworkDevice,getter:"_getSelectNodesByCategory"};var devices=mapPageObj.getNetmapOperator().getSelectedDevcies();devices.forEach((function(device){device.name=device.hostName;device.id=device.key}));if((devices=_.filter(devices,(function(item){return!item.devNodeData||(!!bIncludeNonRealDevice||item.devNodeData.isRealDev)})))&&devices.length){deviceStruct.hasSelectedDevice=!0;deviceStruct[deviceCategory.name]=devices}return deviceStruct};exports.getDeviceByCategory=function(mapPageObj,deviceCategory){var arrTarget=mapPageObj[deviceCategory.getter](deviceCategory.category);return _.map(_.filter(arrTarget,(function(item){return(!item.devNodeData||!item.devNodeData.hasOwnProperty("isRealDev")||1==item.devNodeData.isRealDev)&&-1==filterDevTypes.indexOf(item.devType)})),(function(node){return{id:node.key,name:node.getHostname(),devType:node.devType,nodeIdentify:node.devNodeData?node.devNodeData.nodeIdentify:null}}))};exports.getDeviceOnMap=function(mapPageObj,bIncludeNonRealDevice){var arrDrawObject=mapPageObj._getAllDrawObjectsByFilter((function(objDrawObject){return netBrain.Map.CategoryMgr.isNetworkDevice(objDrawObject.getCategory())&&!netBrain.Map.gMediaTypeMgr.isMediaType(objDrawObject.getDevType())}));return{devices:_.map(_.filter(arrDrawObject,(function(item){return!(item.devNodeData&&null!==item.devNodeData.isRealDev&&void 0!==item.devNodeData.isRealDev&&1!=item.devNodeData.isRealDev&&!bIncludeNonRealDevice)&&-1==filterDevTypes.indexOf(item.devType)})),(function(device){return{id:device.key,name:device.getHostname(),devType:device.devType,nodeIdentify:device.devNodeData?device.devNodeData.nodeIdentify:null}}))}};exports.openOldTargetDeviceDialog=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/framework/views/executionTargetDeviceSelectPopup.html",controller:"nb.miniTask.executionTargetDeviceSelectPopupCtrl",windowClass:"executionTargetDeviceSelectPopup",backdrop:"static",keyboard:!1,size:"sm",resolve:{args:function(){return{objPage:options.objPage,objTarget:options.oldTargetDevice||{},filterFunc:options.filterFunc,bIncludeNonRealDevice:options.bIncludeNonRealDevice}}}}).result};exports.openSelectQappDialog=function(options,bBreakSelect){if(bBreakSelect)return $q.when(options&&options.qapps||[]);var promise=$uibModal.open({templateUrl:"modules/nbRunBook/qappTaskNode/views/selectQapps.html",controller:"nb.runbook.selectQappsCtrl",windowClass:"qappMiniTask-selectQapp",backdrop:"static",keyboard:!1,resolve:{resolveData:function(){return{qappList:[],isSingleSelect:!0,isPathQapp:options.isPathQapp,excludeVersions:options&&options.excludeVersions||[]}}}}).result;return options&&options.qapps?promise.then((function(qappList){var qapp=null;qappList&&qappList.length>0&&(qapp=qappList[0]);if(null==qapp)return options.qapps;_.find(options.qapps,(function(ele){return ele.qappId==qapp.qappId}))||options.qapps.push(qapp);return options.qapps})):promise};exports.getVisibleInfts=function(mapPageObj){var netMapOp=mapPageObj.getNetmapOperator();return _.map(netMapOp.getAllInterfaceList(),(function(item){return{devId:item.devId,intfSchema:(item.intf.intfKeyObj.schema||"").replace("._id",""),intfValue:item.intf.intfKeyObj.value,topoType:item.topoType}}))};exports.hasAccessToLiveNetworkPermission=function(){if(!permissionSrvc.anyPermission(NetBrain.NG.Permissions.accessToLiveNetwork)){nbAlertSrvc.error("You don't have the privilege to access Live Network. Please contact your NetBrain administrator for details.");return!1}return!0};exports.getTargetDeviceOnMap=function(mapPageObj,bAllDevices,bIncludeNonRealDevice){return bAllDevices?targetDeviceSrvc.getTargetDeviceOnMap({objPage:mapPageObj},bIncludeNonRealDevice):targetDeviceSrvc.getDefaultSelectedDevices(mapPageObj,bIncludeNonRealDevice)};exports.getDevIdsOnPage=function(mapPageObj,bAllDevices){var devices=exports.getTargetDeviceOnMap(mapPageObj,bAllDevices);return _.pluck(devices.devices,"id")};exports.buildPathName=function(pathObj){pathObj||console.error("path Obj is null");return pathObj.fromDev.devName+" => "+pathObj.toDev.devName+(pathObj.isLive?"":"(cache)")};function mergeDevice(src,des){if(!_.isArray(des))return _.filter(src,(function(device){return device.id!=des.id}));_.each(des,(function(deviceItem){src=_.filter(src,(function(device){return device.id!=deviceItem.id}))}));return src}return exports}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.exeCliCmdSrvc",exeCliCmdSrvc);exeCliCmdSrvc.$inject=["$q","nb.miniTask.miniTaskUtilSrvc","nb.miniTask.miniTaskDialog","nb.ng.utilitySrvc","nb.miniTask.httpExeCliCmdSrvc"];function exeCliCmdSrvc($q,miniTaskUtilSrvc,miniTaskDialog,utilitySrvc,httpExeCliCmdSrvc){this.executeStart=function(data){return httpExeCliCmdSrvc.executeStart(data)};this.executeStop=function(alogId){var data={activityId:alogId};return httpExeCliCmdSrvc.executeStop(data)};this.getStatusResult=function(alogId){var data={activityId:alogId};return httpExeCliCmdSrvc.getStatusResult(data)};this.getExeResult=function(taskId){var data={taskType:13,taskId:taskId};return httpExeCliCmdSrvc.getExeResult(data)};this.createDataFolder=function(mapInfo,name){var dataFolder={id:utilitySrvc.getGUID(),name:name,mapId:mapInfo.mapId,mapPageId:mapInfo.mapPageId};return httpExeCliCmdSrvc.createDataFolder(dataFolder)};this.getDataFolderList=function(mapInfo){return httpExeCliCmdSrvc.getDataFolderList(mapInfo)};this.openDevicePop=function(data){return miniTaskUtilSrvc.openOldTargetDeviceDialog(data)};this.addDefaultMiniTaskDevice=function(viewMiniTaskId,deviceObj){var devs=deviceObj.devices||[];miniTaskUtilSrvc.addMiniTaskDevice(viewMiniTaskId,devs)};this.export=function(activityId,taskId){return httpExeCliCmdSrvc.export(activityId,taskId)}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.httpExeCliCmdSrvc",httpExeCliCmdSrvc);httpExeCliCmdSrvc.$inject=["nb.ng.nbHttp"];function httpExeCliCmdSrvc(nbHttp){function ajax(url,method,request){return nbHttp[method.toLowerCase()](url,request)}var retrieveAjaxApi={};angular.forEach({createDataFolder:["POST","datafolder/add"],getDataFolderList:["POST","datafolder/getByMap"],getStatusResult:["POST","actionTask/otherwrapper/retrieveStatusResult"]},(function(v,i,obj){retrieveAjaxApi[i]=function(data){return ajax(v[1],v[0],data)}}));retrieveAjaxApi.getExeResult=function(data){return ajax("runbook/actionTask/get/"+data.taskType+"/"+data.taskId,"GET")};retrieveAjaxApi.export=function(activityId,taskId){return ajax("actionTask/otherwrapper/activityData/export/"+activityId+"/"+taskId,"GET")};retrieveAjaxApi.executeStart=function(data){data.ownerWebPageId=netBrain.Page.Guid;data.hubClientId=ngHub.getInstance().getClientId();data.triggerLocalStartTime=new Date;return ajax("runbook/actionTask/run","POST",data)};retrieveAjaxApi.executeStop=function(data){return ajax("runbook/actionTask/stop/"+data.activityId,"POST")};return retrieveAjaxApi}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.cliMiniTask.shareOrApplayDataViewSrvc",shareOrApplayDataViewSrvc);shareOrApplayDataViewSrvc.$inject=["$rootScope","$q","$timeout","$uibModal","nb.miniTask.miniTaskDialog","nb.miniTask.dataViewManagerCallerSrvc","nb.dataview.dataViewInfoMgr","nb.miniTask.httpShareOrApplayDataViewSrvc","nb.miniTask.miniTaskUtilSrvc","nb.runbook.actionTaskForDataViewSrvc","nb.dataview.applyDataViewSrvc","nb.qmap.monitorDataviewSrvc","nb.common.nbAlertSrvc"];function shareOrApplayDataViewSrvc($rootScope,$q,$timeout,$uibModal,miniTaskDialog,dataViewManagerCallerSrvc,dataViewInfoMgr,httpShareOrApplayDataViewSrvc,miniTaskUtilSrvc,actionTaskForDataViewSrvc,applyDataViewSrvc,monitorDataviewSrvc,nbAlertSrvc){var self=this;this.getDataView=function(id){var newOrder={id:id};return httpShareOrApplayDataViewSrvc.getDataView(newOrder)};this.getShareDataView=function(id){var newOrder={id:id};return httpShareOrApplayDataViewSrvc.getShareDataView(newOrder)};this.getDataViewInfoHandler=function(activity,$event,viewModel,mapPageObj){var activityId=activity.id;var datas={};var promises=[function(activityId){return self.getDataView(activityId).then((function(data){datas.displayDataViews=data||[]}))}(activityId),function(activityId){return self.getShareDataView(activityId).then((function(data){datas.shareDataViews=data||[]}))}(activityId)];$event.stopPropagation();applyDataViewSrvc.changeToSwitchMode(null,!0);return $q.all(promises).then((function(){var dataviews=(displayDataViewsAsObject=convertArrayToObject(datas.displayDataViews),shareDataViewsAsObject=convertArrayToObject(datas.shareDataViews),allIds=_.union(displayDataViewsAsObject.ids,shareDataViewsAsObject.ids),_.map(allIds,(function(id){var item1=displayDataViewsAsObject[id];var item2=shareDataViewsAsObject[id];var item=item1||item2;item.hasDisplayData=!!item1;item.hasShareData=!!item2;return item})));var displayDataViewsAsObject,shareDataViewsAsObject,allIds;if(_.isEmpty(dataviews)){activity.showDataview=!1;nbAlertSrvc.error("Failed to apply the data view to this map: the requested data view has been deleted.");return $q.reject("Failed to apply the data view to this map: the requested data view has been deleted.")}activity.dataViews=dataviews;if(viewModel){_.each(viewModel.task,(function(t){t.id!=activity.id&&(t.showDataview=!1)}));if(viewModel&&activity.dataViews&&activity.dataViews.length>1){viewModel._popupDV.taskId=activity.id;viewModel._popupDV.dataview=angular.copy(activity.dataViews)}}if(activity.fromQappResultHyperlink){self.applyDataView(dataviews[0],mapPageObj);return $q.resolve("true")}dataviews.length>1&&(activity.showDataview=!activity.showDataview);if(1==dataviews.length){activity.showDataview=!1;activity.isBackground&&actionTaskForDataViewSrvc.setLastDataViewGroupId(activity.mapInfo.mapPageId,dataviews[0].ID);return self.applyDataView(dataviews[0],mapPageObj).then((function(){return $q.resolve("true")}),(function(){return $q.resolve("false")}))}}));function convertArrayToObject(arr){var ids=_.pluck(arr,"ID");var obj=_.object(ids,arr);obj.ids=ids;return obj}};this.onClickDataViewById=function(data,mapPageObj,taskId,index){var activity=null;data.some((function(ele){if(ele.id==taskId){activity=ele;return!0}}));activity&&self.onClickDataView(activity,index,mapPageObj)};this.onClickDataView=function(activity,index,mapPageObj){activity.dataViews&&activity.dataViews.length>0&&(index&&index<activity.dataViews.length?self.applyDataView(activity.dataViews[index],mapPageObj):self.applyDataView(activity.dataViews[0],mapPageObj))};this.applyDataView=function(dataview,mapPgeobj){var deferred=$q.defer();self.checkDataViewOnPage(mapPgeobj,dataview).then((function(result){if(result){dataViewInfoMgr.applyDataViewInfoByDataView(mapPgeobj,"multiple",dataview).then((function(){$rootScope.$emit("clearDataViewPanelPreviewStatus");monitorDataviewSrvc.checkNetMapMonitor(mapPgeobj);mapPgeobj.refreshMapViewOptionVisible()}));deferred.resolve()}else deferred.reject()}),(function(){deferred.reject()}));return deferred.promise};this.applyDataViewFromRunTemplate=function(dataview,mapPgeobj){var deferred=$q.defer();try{dataViewInfoMgr.applyDataViewInfoByDataView(mapPgeobj,"multiple",dataview).then((function(){$rootScope.$emit("clearDataViewPanelPreviewStatus")}));deferred.resolve()}catch(ex){deferred.reject()}return deferred.promise};this.onShareDataView=function(activity,$event,mapInfo){var shareData={};shareData.alogId=activity.id;shareData.mapId=mapInfo.mapId;shareData.map=mapInfo.map;shareData.netmap=mapInfo.mapPage;(activity.sourceTaskInfo.hasDataView||14==activity.type)&&(activity.isAllShared||self.getShareDataView(activity.id).then((function(data){if(!activity.isAllShared)if(_.isEmpty(data))miniTaskDialog.notify("No available Data View can be shared.");else{shareData.shareDataChildList=data||[];shareData.shareDataChildList.length>0&&$uibModal.open({templateUrl:"modules/nbMiniTask/miniTaskUtils/views/shareDataViewpopup.html",controller:"nb.miniTask.shareDataViewPopupCtrl",backdrop:"static",size:"sm",windowClass:"shareDataViewPopup",resolve:{args:function(){return{objshareData:shareData}}}}).result.then((function(objShareDataView){activity.isAllShared=_.isEmpty(_.filter(objShareDataView,(function(dataview){return!dataview.isShared})));$rootScope.$emit("tollge-data-view-pane")}),(function(reason){console.log(reason)}))}}),(function(){})))};this.onShareADataView=function(activity,$event,mapInfo,dataViewId){var deferred=$q.defer();var shareData={};shareData.alogId=activity.id;shareData.mapId=mapInfo.mapId;shareData.map=mapInfo.map;shareData.netmap=mapInfo.mapPage;if(!activity.sourceTaskInfo.hasDataView)return $q.reject();if(activity.isAllShared)return $q.reject();self.getShareDataView(activity.id).then((function(data){if(_.isEmpty(data)){nbAlertSrvc.error("Failed to apply the data view to this map: the requested data view has been deleted.");deferred.reject()}data=_.filter(data,(function(d){return d.ID==dataViewId}));shareData.shareDataChildList=function(data){var tempData=[];if(!data)return tempData;for(var x=0;x<data.length;x++){var tempObj={};if(data[x].name){tempObj.name=data[x].name;tempObj.ID=data[x].ID;tempData.push(tempObj)}}return tempData}(data);shareData.shareDataChildList.length>0&&$uibModal.open({templateUrl:"modules/nbMiniTask/miniTaskUtils/views/shareDataViewpopup.html",controller:"nb.miniTask.shareDataViewPopupCtrl",backdrop:"static",size:"sm",windowClass:"shareDataViewPopup",resolve:{args:function(){return{objshareData:shareData}}}}).result.then((function(objShareDataView){activity.isAllShared=_.isEmpty(_.filter(objShareDataView,(function(dataview){return!dataview.isShared})));deferred.resolve()}),(function(reason){console.log(reason);deferred.reject()}))}),(function(){}));return deferred.promise};this.checkDataViewOnPage=function(mapPage,dataviewGroupId){var devIds=miniTaskUtilSrvc.getDevIdsOnPage(mapPage,!0);return httpShareOrApplayDataViewSrvc.getDeviceDataViewsByDataViewGroupIdAndDevIds({dataViewGroupId:dataviewGroupId.ID,deviceIdList:devIds}).then((function(dataview){if(dataview)return!0}),(function(err){400004===err.ResultCode?miniTaskDialog.error("The data view no longer exists."):400005===err.ResultCode?miniTaskDialog.error("No data found for the data view."):100005===err.ResultCode?miniTaskDialog.error("The Data View cannot be applied on this map,since there are no matched devices."):miniTaskDialog.warn(err.ResultDesc)}))}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").factory("nb.miniTask.httpShareOrApplayDataViewSrvc",httpShareOrApplayDataViewSrvc);httpShareOrApplayDataViewSrvc.$inject=["nb.ng.nbHttp"];function httpShareOrApplayDataViewSrvc(nbHttp){function ajax(url,method,request){return nbHttp[method.toLowerCase()](url,request)}function get(url,request){return ajax(url,"GET",request)}return{getDataView:function(newOrder){return get("dataview/displaydataview/"+newOrder.id)},getShareDataView:function(newOrder){return get("dataview/sharedataview/"+newOrder.id)},getDeviceDataViewsByDataViewGroupIdAndDevIds:function(newOrder){return ajax("dataviewgroup/getDeviceDataViewsByDataViewGroupIdAndDevIds","POST",newOrder)}}}}(NetBrain);!function(netBrain){angular.module("nb.miniTask").service("nb.miniTask.qappMiniTaskSrvc",nbService);nbService.$inject=["$q","$timeout","$uibModal","$rootScope","nb.miniTask.miniTaskDialog","nb.miniTask.httpMiniTaskSrvc","nb.common.nbAlertSrvc","nb.activity.activityContext","nb.qmap.mapManagerSrvc","nb.netbrain.dataViewCacheSrvc","nb.qapp.httpQappInfoSrvc","nb.qmap.updateMapSrvc","nb.path.httpPathSrvc","nb.miniTask.miniTaskUtilSrvc","nb.miniTask.miniTaskDialogSrvc","nb.miniTask.miniTaskForDataViewSrvc"];function nbService($q,$timeout,$uibModal,$rootScope,miniTaskDialog,httpMiniTaskSrvc,nbAlertSrvc,activityContext,mapManagerSrvc,dataViewCacheSrvc,httpQappInfoSrvc,updateMapSrvc,httpPathSrvc,miniTaskUtilSrvc,miniTaskDialogSrvc,miniTaskForDataViewSrvc){this.getQappMiniTaskDataTmpl=function(data){return angular.merge({name:"Run Qapp",option:{dataFolderToRun:{dataFolderId:"0"},dataViewOption:{type:1},shareAlertUser:[],dataSource:{dataSourceType:1},dataViewSetting:{saveAsType:1,dataViewMapping:[]},runQappModel:1},qappList:[],targetDevice:{deviceGroups:[],devices:[],paths:[],sites:[]}},data||{})};this.getMiniTaskTmpl=function(data){return angular.merge({hubClientId:"",id:null,mapInfo:{mapId:"",mapPageId:""},mapSessionId:"",sourceId:null,type:"1"},data||{})};this.getActiveSessionAsync=function(mapPageObj){var mapInfo={mapPageId:mapPageObj.getDocId(),mapId:mapPageObj.getParentQmap().getDocId()};return activityContext.getActiveSession(mapInfo).then((function(data){return data&&data.id||null}),(function(){return null}))};this.getDataFolder=function(mapInfo){return httpMiniTaskSrvc.mapPageSession.getDataFolder(mapInfo)};this.run=function(data){return httpMiniTaskSrvc.framework.run(null,data)};this.getTargetDeviceOnMap=function(mapPageObj,bAllDevices){return miniTaskUtilSrvc.getTargetDeviceOnMap(mapPageObj,bAllDevices)};this.confirm=function(title){return miniTaskDialog.confirm(title)};this.alert=function(title,content){return miniTaskDialog.alert(title,content)};this.openSelectQappDialog=function(options){return miniTaskUtilSrvc.openSelectQappDialog(options)};this.closeMiniTaskDialog=function(dialogId){return miniTaskDialogSrvc.closeMiniTaskDialog(dialogId)};this.openControlPaneAfterPageInit=function(mapPageObj){var me=this;this.GetRunningsByPageId(mapPageObj.getDocId()).then((function(data){if(data){var qappTasks=[];var mbsTasks=[];data.forEach((function(ele){1==ele.type?qappTasks.push(ele):9==ele.type&&mbsTasks.push(ele)}));(qappTasks.length>0||mbsTasks.length>0)&&me.openControlPane(mapPageObj,qappTasks,mbsTasks)}}))};this.openControlPane=function(mapPageObj,qappTasks,mbsTasks){miniTaskUtilSrvc.showMiniTaskDialog({miniTaskType:"10",initMini:!0,mapPageObj:mapPageObj,innerData:{startData:null,qappTasks:qappTasks||void 0,mbsTasks:mbsTasks||void 0},dialogOptions:{width:400,minHeight:136}})};this.addQappTask2ControlPane=function(task){task.type=1;$rootScope.$emit("CONTROLPANE_ADDQAPPTASK",task)};this.openTargetDeviceDialog=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/miniTaskUtils/views/targetDevice.html",controller:"nb.miniTask.targetDeviceCtrl",windowClass:"executionTargetDeviceSelectPopup",backdrop:"static",keyboard:!1,size:"sm",resolve:{args:function(){return{mapPageObj:options.mapPageObj,miniTaskId:options.miniTaskId}}}}).result};this.openTargetDeviceDialogOld=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/framework/views/executionTargetDeviceSelectPopup.html",controller:"nb.miniTask.executionTargetDeviceSelectPopupCtrl",windowClass:"executionTargetDeviceSelectPopup",backdrop:"static",keyboard:!1,size:"sm",resolve:{args:function(){return{objDomain:options.objDomain,objPage:options.objPage,objTarget:options.oldTargetDevice||{}}}}}).result};this.openEditFrequency=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/qappMiniTask/views/editFrequency.html",controller:"nb.miniTask.editFrequencyCtrl",windowClass:"w518",backdrop:"static",keyboard:!1,resolve:{args:function(){return{runOption:options.runOption}}}}).result};this.openEditPathTable=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/qappMiniTask/views/pathTableInput.html",controller:"nb.miniTask.pathTableCtrl",windowClass:"qappMiniTask-editTableInput-modal",backdrop:"static",keyboard:!1,resolve:{args:function(){return{pathTable:options.pathTable}}}}).result};this.openEditCalPath=function(path){return $uibModal.open({templateUrl:"modules/nbPath/views/editAppMgrPopout.html",controller:"nb.path.editAppMgrPopoutCtrl",windowClass:"appMgrPopoutFrame-fullview-popout",backdrop:"static",keyboard:!1,resolve:{templateData:function(){var templateData={};templateData.mode="OK";templateData.isEditModel=!0;templateData.isFrom="qappPathTable";templateData.pathModalTitle="Edit Path";templateData.analysisBy=httpPathSrvc.pasList;angular.extend(templateData,path);return templateData}}}).result};this.openCalPath=function(item){return $uibModal.open({templateUrl:"modules/nbPath/views/editAppMgrPopout.html",controller:"nb.path.editAppMgrPopoutCtrl",windowClass:"appMgrPopoutFrame-fullview-popout",backdrop:"static",keyboard:!1,resolve:{templateData:function(){var templateData={};templateData.qappName=item.qappName;templateData.mode="OK";templateData.pathModalTitle="Add Path";templateData.isFrom="qappPathTable";templateData.protocol=4;templateData.analysisBy=httpPathSrvc.pasList;return templateData}}}).result};this.openEditTableInput=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/qappMiniTask/views/editTableInput.html",controller:"nb.miniTask.tableInputCtrl",windowClass:"qappMiniTask-editTableInput-modal",backdrop:"static",keyboard:!1,resolve:{args:function(){return{tableInput:options.tableInput}}}}).result};this.openEditThreshold=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/qappMiniTask/views/editThreshold.html",controller:"nb.miniTask.editThresholdCtrl",windowClass:"editThreshold",backdrop:"static",keyboard:!1,resolve:{resolveData:function(){return{threshold:options.threshold,qappName:options.qappName}}}}).result};this.openShowOption=function(options){return $uibModal.open({templateUrl:"modules/nbMiniTask/qappMiniTask/views/option.html",controller:"nb.miniTask.optionCtrl",backdrop:"static",size:"sm",windowClass:"qappMiniTaskOptionPopup",resolve:{args:function(){return{parentScope:options.parentScope,option:options.option,hasFrequency:options.hasFrequency,mapId:options.mapId,mapPageId:options.mapPageId}}}}).result};this.openShowCsv=function(options){$uibModal.open({templateUrl:"modules/nbMiniTask/framework/views/miniTaskQappCsv.html",controller:"nb.miniTask.miniTaskQappCsvCtrl",backdrop:"static",keyboard:!1,size:"sm",windowClass:"miniTaskQappCsv",resolve:{args:function(){return{aLogId:options.ID}}}})};this.GetRunningsByPageId=function(pageId){return httpMiniTaskSrvc.activity.GetRunningsByPageId(pageId)};this.getDataViewInfoHandler=function(task,fnOnGetDataView){};this.onAutoRun=function(qappList,mapPageObj,targetDevice){var me=this;var dm={data:me.getMiniTaskTmpl({miniTaskData:me.getQappMiniTaskDataTmpl({targetDevice:targetDevice||{}}),mapInfo:{mapId:mapPageObj.getParentQmap().getDocId(),mapPageId:mapPageObj.getDocId()},mapSessionId:null,sourceId:null,type:"1"}),qapps:[],isContainerTableInput:!1,_loading:!1};$q.when(me.onChangeQapp(dm,qappList)).then((function(data){dm.qapps.length>0&&me.onRun(dm,mapPageObj)}))};this.onAddQapps=function(dm,qapps){var newQapps=[];qapps.forEach((function(eleQapp){if(!dm.qapps.some((function(oldQapp){if(oldQapp.qappId==eleQapp.qappId)return!0}))){newQapps.push(eleQapp);dm.qapps.push(eleQapp)}}));newQapps.length>0&&this.getQappInfo(dm,newQapps.map((function(ele){return ele.qappId})),[],dm.data.miniTaskData.option.dataViewSetting.dataViewMapping)};this.onChangeQapp=function(dm,selectQappList){angular.isDefined(dm.data.runFrom)&&dm.data.runFrom.openFromRB?angular.isDefined(selectQappList.isSelfContain)&&selectQappList.isSelfContain?__loadQappsByIds(dm,selectQappList,this):function(dm,selectQappList,me){dm._loading=!0;var d=dm.data.miniTaskData;dm.isContainerTableInput=!1;var oldQapps=dm.qapps&&angular.copy(dm.qapps)||[];selectQappList.forEach((function(ele){if(ele.runOption&&ele.threshold){for(var i=0;i<oldQapps.length;i++)if(oldQapps[i].qappId==ele.qappId){oldQapps[i]=angular.copy(ele);return}oldQapps.push(angular.copy(ele))}}));dm.qapps=selectQappList;var newDataViewMapping=[];d.option.dataViewSetting.dataViewMapping=newDataViewMapping;0==oldQapps.length&&selectQappList.length;var qappPaths=[];dm.qapps.forEach((function(ele){qappPaths.push(ele.qappPath)}));1!=dm.qapps.length||dm.qapps[0].qappName?me.getQappInfoByPaths(dm,qappPaths,oldQapps,newDataViewMapping):httpQappInfoSrvc.getQappInfoByPaths(dm.qapps[0].qappPath).then((function(data){if(data&&data.name&&dm.qapps[0].qappId==data.id){dm.qapps[0].qappName=data.name;oldQapps.forEach((function(ele){ele.qappId==data.id&&(ele.qappName=data.name)}))}return me.getQappInfoByPaths(dm,qappPaths,oldQapps,newDataViewMapping)}),(function(msg){return me.getQappInfoByPaths(dm,qappPaths,oldQapps,newDataViewMapping)}))}(dm,selectQappList,this):__loadQappsByIds(dm,selectQappList,this)};function __loadQappsByIds(dm,selectQappList,me){dm._loading=!0;var d=dm.data.miniTaskData;dm.isContainerTableInput=!1;var oldQapps=dm.qapps&&angular.copy(dm.qapps)||[];selectQappList.forEach((function(ele){if(ele.runOption&&ele.threshold){for(var i=0;i<oldQapps.length;i++)if(oldQapps[i].qappId==ele.qappId){oldQapps[i]=angular.copy(ele);return}oldQapps.push(angular.copy(ele))}}));dm.qapps=selectQappList;var newDataViewMapping=[];d.option.dataViewSetting.dataViewMapping=newDataViewMapping;var qappIds=[];dm.qapps.forEach((function(ele){qappIds.push(ele.qappId)}));return 1!=dm.qapps.length||dm.qapps[0].qappName?me.getQappInfo(dm,qappIds,oldQapps,newDataViewMapping):httpQappInfoSrvc.getQappInfo(dm.qapps[0].qappId).then((function(data){if(data&&data.name&&dm.qapps[0].qappId==data.id){dm.qapps[0].qappName=data.name;oldQapps.forEach((function(ele){ele.qappId==data.id&&(ele.qappName=data.name)}))}return me.getQappInfo(dm,qappIds,oldQapps,newDataViewMapping)}),(function(msg){return me.getQappInfo(dm,qappIds,oldQapps,newDataViewMapping)}))}this._checkTargeDevice=function(dm,mapPageObj){var curDevs=this.getTargetDeviceOnMap(mapPageObj,!0);["deviceGroups","devices","paths","sites"].forEach((function(type){var localIds=dm.data.miniTaskData.targetDevice[type];var curIds=curDevs[type]?curDevs[type].map((function(ele){return ele.id})):[];if(localIds&&localIds.length)for(var i=0;i<localIds.length;i++)if(curIds.indexOf(localIds[i])<0){localIds.splice(i,1);i--}}))};this.onRun=function(dm,mapPageObj,fnBeforeRun,scope,oldActivity){if(!this.runOptionIsLiveNetWork(dm.data.miniTaskData.option)||miniTaskUtilSrvc.hasAccessToLiveNetworkPermission()){var me=this;dm.data.type=1;dm.data.mapInfo={mapId:mapPageObj.getParentQmap().getDocId(),mapPageId:mapPageObj.getDocId()};me._checkTargeDevice(dm,mapPageObj);updateMapSrvc.canUpdateCurrentMap().then((function(){scope.savedMap().then((function(){activityContext.getMapPageActivityGroup(dm.data.mapInfo).then((function(activityGroup){dm.data.mapSessionId=activityGroup.id;activityContext.getMapPageDefaultDataFolderId(dm.data.mapInfo).then((function(dataFolerId){dm.data.sourceId=dataFolerId;me.doRun(dm,mapPageObj,fnBeforeRun,oldActivity,scope)}),(function(){scope.dataModel.sendingTask=!1}))}),(function(){scope.dataModel.sendingTask=!1}))}),(function(){scope.dataModel.sendingTask=!1}))}),(function(){scope.dataModel.sendingTask=!1}))}};this.doRun=function(dataModel,mapPageObj,fnBeforeRun,oldActivity,scope){var me=this;var data=dataModel.data;if(!me.runOptionIsLiveNetWork(data.miniTaskData.option)||miniTaskUtilSrvc.hasAccessToLiveNetworkPermission()){var $mapPageId=mapPageObj.getDocId();data.useType=activityContext.getUseType($mapPageId);data.miniTaskData.qappList=me.transferQappList(dataModel.qapps);var qappList=data.miniTaskData.qappList;if(0!=qappList.length){var op=data.miniTaskData.option;data.miniTaskData.name=function(qappList){return 1==qappList.length?qappList[0].qappName:qappList.length+" Qapps including "+qappList[0].qappName}(qappList);data.hubClientId=ngHub.getInstance().getClientId();op.dataFolderToRun&&"0"==op.dataFolderToRun.dataFolderId?data.sourceId&&(op.dataFolderToRun.dataFolderId=data.sourceId):data.sourceId=op.dataFolderToRun.dataFolderId;var qapps=[];qappList.forEach((function(ele){qapps.push({isGenerateDataView:ele.isGenerateDataView,qappId:ele.qappId,qappName:ele.qappName,runOption:angular.copy(ele.runOption)})}));data.miniTaskData.visibleIntfs=miniTaskUtilSrvc.getVisibleInfts(mapPageObj);data.reportMethod=1;miniTaskData=data.miniTaskData,nameDataViewGroupIdMap={},dataViewInfos=miniTaskData.option.dataViewSetting.dataViewMapping,_.each(dataViewInfos,(function(dataViewInfo){if(dataViewInfo.dataViewGroupName){nameDataViewGroupIdMap[dataViewInfo.dataViewGroupName]||(nameDataViewGroupIdMap[dataViewInfo.dataViewGroupName]=Utility.getGUID());dataViewInfo.dataViewGroupId=nameDataViewGroupIdMap[dataViewInfo.dataViewGroupName]}}));var miniTaskData,nameDataViewGroupIdMap,dataViewInfos;var lastDataViewGroupId=(option=data.miniTaskData.option,dataViewMappings=option.dataViewSetting.dataViewMapping,(index=_.findLastIndex(dataViewMappings,(function(item){return item.dataViewGroupId})))>-1?dataViewMappings[index].dataViewGroupId:null);var option,dataViewMappings,index;data.triggerLocalStartTime=new Date;me.run(data).then((function(data){data._qapps=qapps;me.dealDataViewForMiniTask(dataModel.qapps,data,mapPageObj,lastDataViewGroupId);$rootScope.$emit("CONTROLPANE_START",data,oldActivity);if(dataModel._scope){var newDialogId=miniTaskDialogSrvc.getDialogId({mapPageObj:mapPageObj,miniTaskType:1,runFrom:data.runFrom,activityId:data.id});dataModel._scope.resetDialogId(newDialogId,dataModel._scope.dialogId)}miniTaskUtilSrvc.showMiniTaskDialog({miniTaskType:"10",mapPageObj:mapPageObj,innerData:{startData:data},dialogOptions:{width:400,minHeight:136}});data.errorInfo&&$timeout((function(){miniTaskDialog.error(data.errorInfo.errorDesc)}));scope&&scope.dataModel&&(scope.dataModel.sendingTask=!1)}),(function(err){if(err.ResultCode){320103==err.ResultCode?miniTaskDialog.notify(err.ResultDesc):miniTaskDialog.error(err.ResultDesc);scope&&scope.dataModel&&(scope.dataModel.sendingTask=!1)}}));fnBeforeRun&&fnBeforeRun()}}};function isPath(newqapp){return newqapp&&newqapp.inputType%4==0}this.getQappInfo=function(dm,qappIds,oldQapps,newDataViewMapping){return httpQappInfoSrvc.getQappBriefInfos(qappIds).then((function(qappInfos){if(qappInfos){qappInfos.forEach((function(ret){var a=null;if(ret.m_Item2){for(i=0;i<dm.qapps.length;i++)if(dm.qapps[i].qappId==ret.m_Item1){a=dm.qapps[i];break}if(a){var newqapp=JSON.parse(ret.m_Item2);a.runOption=newqapp.runOption;a.inputOption=newqapp.inputOption;ret.inputOption=a.inputOption;a.isInputPath=isPath(newqapp);ret.isInputPath=a.isInputPath;a.isGenerateDataView=newqapp.isGenerateDataView;a.threshold=newqapp.threshold;a.hasEditThreshold=!!$(a.threshold.varHtml).find(".analysis").html();a.threshold.monItemsObj=a.threshold.monItems;a.threshold.monItems=JSON.stringify(a.threshold.monItems);if(newqapp.tableInput.length>0){a.tableInput=_.extend(newqapp.tableInput,a.tableInput);a.tableInput=_.filter(a.tableInput,{allowEditAtRuntime:!0});a.isContainerTableInput=!!a.tableInput.length}a.pathTable=_.extend(newqapp.pathTable,a.pathTable);a.isContainerPathTable=!!a.isInputPath&&(1==a.inputOption||2==a.inputOption);oldQapps.some((function(ele){if(ele.qappId==a.qappId){ele.threshold&&ele.threshold.monItems&&!ele.threshold.monItemsObj&&(ele.threshold.monItemsObj=JSON.parse(ele.threshold.monItems));angular.merge(a,ele);return!0}}));a.summary={};a.summary.command=[];a.summary.output=[];for(i=0;i<newqapp.cliCommands.length;i++)a.summary.command.push({id:i,name:newqapp.cliCommands[i]});for(i=0;i<newqapp.outputTypes.length;i++)a.summary.output.push({id:i,name:newqapp.outputTypes[i]});var newret={};newret.qappId=a.qappId;newret.qappName=a.qappName;newret.isGenerateDataView=a.isGenerateDataView;a.isGenerateDataView&&(newret.dataViewGroupName=a.qappName);newDataViewMapping.push(newret)}}else for(var i=0;i<dm.qapps.length;i++)if(dm.qapps[i].qappId==ret.m_Item1){dm.qapps.splice(i,1);break}}));dm._loading=!1;dm.isContainerTableInput=_.some(qappInfos,(function(a){if(a.m_Item2){var c=JSON.parse(a.m_Item2);c.tableInput=_.filter(c.tableInput,{allowEditAtRuntime:!0});return!!c.tableInput.length}}));dm.isContainerPathTable=_.some(qappInfos,(function(a){return!!a.isInputPath&&(1==a.inputOption||2==a.inputOption)}))}return dm}),(function(ex){dm._loading=!1;nbAlertSrvc.error("Failed to load the Qapps: the requested Qapps may have been deleted.");dm._loadingQappFailed=!0;console.log(ex)}))};this.getQappInfoByPaths=function(dm,qappPaths,oldQapps,newDataViewMapping){return httpQappInfoSrvc.GetQappBriefInfosByPath(qappPaths).then((function(qappInfos){if(qappInfos){qappInfos.forEach((function(ret){var a=null;if(ret.m_Item2){for(i=0;i<dm.qapps.length;i++)if(dm.qapps[i].qappPath==ret.m_Item3){dm.qapps[i].qappId=ret.m_Item1;a=dm.qapps[i];break}if(a){var newqapp=JSON.parse(ret.m_Item2);a.runOption=newqapp.runOption;a.inputOption=newqapp.inputOption;ret.inputOption=a.inputOption;a.isInputPath=isPath(newqapp);ret.isInputPath=a.isInputPath;a.isGenerateDataView=newqapp.isGenerateDataView;a.threshold=newqapp.threshold;a.threshold.monItemsObj=a.threshold.monItems;a.threshold.monItems=JSON.stringify(a.threshold.monItems);if(newqapp.tableInput.length>0){a.tableInput=_.extend(newqapp.tableInput,a.tableInput);a.tableInput=_.filter(a.tableInput,{allowEditAtRuntime:!0});a.isContainerTableInput=!!a.tableInput.length}a.pathTable=_.extend(newqapp.pathTable,a.pathTable);a.isContainerPathTable=!!a.isInputPath&&(1==a.inputOption||2==a.inputOption);oldQapps.some((function(ele){if(ele.qappPath==a.qappPath){ele.threshold&&ele.threshold.monItems&&!ele.threshold.monItemsObj&&(ele.threshold.monItemsObj=JSON.parse(ele.threshold.monItems));var newQappId=a.qappId;angular.merge(a,ele);a.qappId=newQappId;return!0}}));a.summary={};a.summary.command=[];a.summary.output=[];for(i=0;i<newqapp.cliCommands.length;i++)a.summary.command.push({id:i,name:newqapp.cliCommands[i]});for(i=0;i<newqapp.outputTypes.length;i++)a.summary.output.push({id:i,name:newqapp.outputTypes[i]});var newret={};newret.qappId=a.qappId;newret.qappName=a.qappName;newret.qappPath=a.qappPath;newret.isGenerateDataView=a.isGenerateDataView;a.isGenerateDataView&&(newret.dataViewGroupName=a.qappName);newDataViewMapping.push(newret)}}else for(var i=0;i<dm.qapps.length;i++)if(dm.qapps[i].qappPath==ret.m_Item3){dm.qapps.splice(i,1);break}}));dm._loading=!1;dm.isContainerTableInput=_.some(qappInfos,(function(a){if(a.m_Item2){var c=JSON.parse(a.m_Item2);c.tableInput=_.filter(c.tableInput,{allowEditAtRuntime:!0});return!!c.tableInput.length}}));dm.isContainerPathTable=_.some(qappInfos,(function(a){return!!a.isInputPath&&(1==a.inputOption||2==a.inputOption)}))}return dm}),(function(ex){dm._loading=!1;nbAlertSrvc.error("Failed to load the Qapps: the requested Qapps may have been deleted.");dm._loadingQappFailed=!0;console.log(ex)}))};this.dealDataViewForMiniTask=function(qappData,jsonData,$mapPageObj,lastDataViewGroupId){var $mapPageScope=$mapPageObj.getCurrentScope();var pageId=$mapPageObj.getDocId();lastDataViewGroupId&&miniTaskForDataViewSrvc.setLastDataViewGroupId(pageId,lastDataViewGroupId);miniTaskForDataViewSrvc.setQappInfo(jsonData.id,qappData);$mapPageScope.$broadcast("newDataViewForMiniTask");$mapPageObj.setIsMonitoring(!1);$mapPageScope.netmap.runingDataViewGroupId=lastDataViewGroupId};this.runOptionIsLiveNetWork=function(options){return options&&options.dataSource&&1==options.dataSource.dataSourceType};this.transferQappList=function(qappList){return _.map(qappList,(function(item){return{qappId:item.qappId,qappName:item.qappName,isGenerateDataView:item.isGenerateDataView,runOption:angular.copy(item.runOption),threshold:angular.copy(item.threshold),tableInput:angular.copy(item.tableInput),isReportDrawPath:item.isInputPath&&1==item.inputOption,pathTable:angular.copy(item.pathTable&&(_.isArray(item.pathTable)?item.pathTable:item.pathTable.ids))}}))};this.notifyRBA=function(data){if(data.runFrom&&1===data.runFrom.type){var result=_.extend({},data);_.extend(result,{activityId:data.id,activityType:data.type,noteText:data.note?data.note.content:""});$rootScope.$emit(RunBookEvent.MINI_TASK_ACTIVITY_UPDATED,result)}}}}(NetBrain);NetBrain,angular.module("nb.miniTask").filter("qappMiniTaskConRunStatus2Txt",(function(){return function(value){return 1==value?"Running":2==value?"Recurring":3==value?"Finished":value}})).filter("qappMiniTaskConRunStatus3Txt",(function(){return function(value){return 3==value?"Finished":""}})).filter("qappMiniTaskConRunStatus2Class",(function(){return function(value){return 1==value?"isRunning":2==value?"isRecurring":3==value?"isFinished":""}})).filter("qappMiniTaskElapseTime",(function(){return function(tmDiff){var ret="";if(tmDiff){var day=Math.floor(tmDiff/86400);var hour=Math.floor(tmDiff/3600)%24;var min=Math.floor(tmDiff/60)%60;var sec=Math.floor(tmDiff%60);day&&(ret+=day+"d");hour&&(ret+=hour+"h");min&&(ret+=min+"m");sec&&(ret+=sec+"s")}return ret?"Elapsed Time: "+ret:"Elapsed Time: 1s"}})).filter("qappMiniTaskConvertInputOption",(function(){return function(value){return 1==value?"Custom":2==value?"GroupSystem":3==value?"TableRefer":value}})).filter("retrieveLiveDataChangeStatusText",(function(){return function(value){return"Succeed"==value?"Succeeded":"Fail"==value?"Failed":value}}));